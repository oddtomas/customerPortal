{"version":3,"file":"wizard-form-header.js","sourceRoot":"","sources":["../../../src/wizard/wizard-form-header.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,KAAK,EAAE,EAAE,UAAU,EAAE,eAAe,EAAE,MAAM,OAAO,CAAC;AAC3D,OAAO,EAAE,gBAAgB,EAAE,MAAM,yCAAyC,CAAC;AAC3E,OAAO,EAAE,iBAAiB,EAAE,MAAM,qCAAqC,CAAC;AACxE,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAQrC,MAAM,CAAC,OAAO,UAAU,gBAAgB,CAAC,EAAoD;QAAlD,QAAQ,cAAA,EAAE,eAAe,qBAAA;IAClE;;;OAGG;IACK,IAAA,uBAAuB,GAAK,UAAU,CAAC,gBAAgB,CAAC,wBAAjC,CAAkC;IAC3D,IAAA,KAA0C,iBAAiB,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,MAAM,EAAX,CAAW,CAAC,EAA/E,qBAAqB,QAAA,EAAE,cAAc,QAA0C,CAAC;IAEvF,eAAe,CACb,SAAS,0BAA0B;QACjC,IAAI,eAAe,EAAE;YACnB,uBAAuB,CAAC,qBAAqB,aAArB,qBAAqB,cAArB,qBAAqB,GAAI,CAAC,CAAC,CAAC;SACrD;IACH,CAAC,EACD,CAAC,eAAe,EAAE,qBAAqB,EAAE,uBAAuB,CAAC,CAClE,CAAC;IAEF,OAAO,CACL,6BACE,SAAS,EAAE,IAAI,CACb,MAAM,CAAC,aAAa,CAAC,EACrB,eAAe,IAAI,MAAM,CAAC,qBAAqB,CAAC,EAChD,eAAe,IAAI,8BAA8B,CAClD,EACD,GAAG,EAAE,cAAc;QAEnB,6BAAK,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,IAAG,QAAQ,CAAO,CACjE,CACP,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useContext, useLayoutEffect } from 'react';\nimport { AppLayoutContext } from '../app-layout/visual-refresh/context.js';\nimport { useContainerQuery } from '../internal/hooks/container-queries';\nimport styles from './styles.css.js';\n\ninterface WizardFormHeaderProps {\n  children: React.ReactNode;\n  isMobile: boolean;\n  isVisualRefresh: boolean;\n}\n\nexport default function WizardFormHeader({ children, isVisualRefresh }: WizardFormHeaderProps) {\n  /**\n   * Observe the dynamic height of the Wizard header in visual refresh and\n   * update the AppLayout dynamicOverlapHeight property.\n   */\n  const { setDynamicOverlapHeight } = useContext(AppLayoutContext);\n  const [overlapContainerQuery, overlapElement] = useContainerQuery(rect => rect.height);\n\n  useLayoutEffect(\n    function handleDynamicOverlapHeight() {\n      if (isVisualRefresh) {\n        setDynamicOverlapHeight(overlapContainerQuery ?? 0);\n      }\n    },\n    [isVisualRefresh, overlapContainerQuery, setDynamicOverlapHeight]\n  );\n\n  return (\n    <div\n      className={clsx(\n        styles['form-header'],\n        isVisualRefresh && styles['form-header-refresh'],\n        isVisualRefresh && 'awsui-context-content-header'\n      )}\n      ref={overlapElement}\n    >\n      <div className={clsx(styles['form-header-content'])}>{children}</div>\n    </div>\n  );\n}\n"]}