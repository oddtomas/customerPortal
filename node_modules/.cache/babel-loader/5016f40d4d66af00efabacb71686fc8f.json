{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useState, useLayoutEffect } from 'react';\nimport { useMergeRefs } from '../../hooks/use-merge-refs';\nimport { getBaseProps } from '../../base-component';\nimport { fireCancelableEvent, fireNonCancelableEvent } from '../../events';\nimport { useFormFieldContext } from '../../context/form-field-context';\nimport InternalInput from '../../../input/internal';\nimport useMask from './use-mask';\nimport MaskFormat from './utils/mask-format';\nvar MaskedInput = React.forwardRef(function (_a, ref) {\n  var value = _a.value,\n      _onBlur = _a.onBlur,\n      _onChange = _a.onChange,\n      _onKeyDown = _a.onKeyDown,\n      mask = _a.mask,\n      _b = _a.autofix,\n      autofix = _b === void 0 ? false : _b,\n      _c = _a.disableAutocompleteOnBlur,\n      disableAutocompleteOnBlur = _c === void 0 ? false : _c,\n      rest = __rest(_a, [\"value\", \"onBlur\", \"onChange\", \"onKeyDown\", \"mask\", \"autofix\", \"disableAutocompleteOnBlur\"]);\n\n  var baseProps = getBaseProps(rest);\n  var formFieldContext = useFormFieldContext(rest);\n  var inputRef = React.useRef(null);\n\n  var _d = useState(null),\n      cursorPosition = _d[0],\n      setCursorPosition = _d[1];\n\n  useLayoutEffect(function () {\n    var _a;\n\n    if (cursorPosition !== null) {\n      (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.setSelectionRange(cursorPosition, cursorPosition);\n    }\n  }, [cursorPosition, inputRef]);\n\n  var _e = useMask({\n    format: new MaskFormat(mask),\n    value: value,\n    inputRef: inputRef,\n    autofix: autofix,\n    disableAutocompleteOnBlur: disableAutocompleteOnBlur,\n    onChange: function onChange(value) {\n      return !rest.readOnly && fireNonCancelableEvent(_onChange, {\n        value: value\n      });\n    },\n    onKeyDown: function onKeyDown(event) {\n      return !rest.readOnly && _onKeyDown && fireCancelableEvent(_onKeyDown, event.detail, event);\n    },\n    onBlur: function onBlur() {\n      return fireNonCancelableEvent(_onBlur);\n    },\n    setPosition: setCursorPosition\n  }),\n      onPaste = _e.onPaste,\n      maskProps = __rest(_e, [\"onPaste\"]);\n\n  var inputProps = __assign(__assign(__assign(__assign({}, rest), baseProps), formFieldContext), maskProps);\n\n  var mergedRef = useMergeRefs(ref, inputRef);\n  return React.createElement(InternalInput, __assign({}, inputProps, {\n    ref: mergedRef,\n    __nativeAttributes: {\n      onPaste: onPaste\n    }\n  }));\n});\nexport { useMask };\nexport default MaskedInput;","map":null,"metadata":{},"sourceType":"module"}