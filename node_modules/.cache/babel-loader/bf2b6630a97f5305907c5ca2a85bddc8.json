{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport OptionsList from '../../internal/components/options-list';\nimport React, { forwardRef, useImperativeHandle } from 'react';\nimport { renderOptions } from '../utils/render-options';\nimport { scrollUntilVisible } from '../../internal/utils/scrollable-containers';\nimport styles from './styles.css.js';\n\nvar PlainList = function PlainList(_a, ref) {\n  var menuProps = _a.menuProps,\n      getOptionProps = _a.getOptionProps,\n      filteredOptions = _a.filteredOptions,\n      filteringValue = _a.filteringValue,\n      isKeyboard = _a.isKeyboard,\n      checkboxes = _a.checkboxes,\n      hasDropdownStatus = _a.hasDropdownStatus,\n      listBottom = _a.listBottom,\n      useInteractiveGroups = _a.useInteractiveGroups,\n      screenReaderContent = _a.screenReaderContent;\n  var menuRef = menuProps.ref;\n  useImperativeHandle(ref, function () {\n    return function (index) {\n      var _a;\n\n      var item = (_a = menuRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(\"[data-mouse-target=\\\"\".concat(index, \"\\\"]\"));\n\n      if (isKeyboard && item) {\n        scrollUntilVisible(item);\n      }\n    };\n  }, [isKeyboard, menuRef]);\n  return React.createElement(OptionsList, __assign({}, menuProps), renderOptions({\n    options: filteredOptions,\n    getOptionProps: getOptionProps,\n    filteringValue: filteringValue,\n    isKeyboard: isKeyboard,\n    checkboxes: checkboxes,\n    hasDropdownStatus: hasDropdownStatus,\n    useInteractiveGroups: useInteractiveGroups,\n    screenReaderContent: screenReaderContent\n  }), listBottom ? React.createElement(\"li\", {\n    role: \"option\",\n    className: styles['list-bottom']\n  }, listBottom) : null);\n};\n\nexport default forwardRef(PlainList);","map":null,"metadata":{},"sourceType":"module"}