{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar PromiseCancelledSignal =\n/** @class */\nfunction () {\n  function PromiseCancelledSignal() {}\n\n  return PromiseCancelledSignal;\n}();\n\nexport { PromiseCancelledSignal };\n/**\n * Wrap and provide a handle for a promise to provide cancellation information inside\n * callbacks. Takes a similar approach to how an AbortController works in modern fetch.\n *\n * @see https://reactjs.org/blog/2015/12/16/ismounted-antipattern.html\n */\n\nexport function makeCancellable(promise) {\n  var cancelled = false;\n  var wrapped = promise.then(function (value) {\n    if (cancelled) {\n      throw new PromiseCancelledSignal();\n    }\n\n    return value;\n  }, function (err) {\n    if (cancelled) {\n      throw new PromiseCancelledSignal();\n    }\n\n    throw err;\n  });\n  return {\n    promise: wrapped,\n    cancel: function cancel() {\n      cancelled = true;\n    },\n    isCancelled: function isCancelled() {\n      return cancelled;\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}