{"ast":null,"code":"/**\n * Handles character removal\n *\n * @param initialValue Current value of input\n * @param format MaskFormat object\n * @param selectionStart Starting index value of selection cursor\n * @param selectionEnd Ending Index value of selection cursor\n */\nexport var backspaceHandler = function backspaceHandler(initialValue, format, selectionStart, selectionEnd) {\n  var multiCharDelete = selectionStart !== selectionEnd;\n\n  if (multiCharDelete) {\n    var isCursorAtEnd = selectionEnd === initialValue.length;\n\n    if (!isCursorAtEnd) {\n      return format.replaceDigitsWithZeroes(initialValue, selectionStart, selectionEnd);\n    }\n\n    return {\n      value: initialValue.slice(0, selectionStart),\n      position: selectionStart\n    };\n  }\n\n  var isSeparator = format.isSegmentStart(selectionStart);\n  var atEnd = selectionStart === initialValue.length;\n\n  if (!atEnd) {\n    if (isSeparator) {\n      return format.deleteSeparator(initialValue, selectionStart);\n    } else {\n      return format.deleteDigit(initialValue, selectionStart);\n    }\n  }\n\n  if (isSeparator) {\n    return {\n      value: initialValue.slice(0, selectionStart - 2),\n      position: selectionStart - 2\n    };\n  }\n\n  return {\n    value: initialValue.slice(0, selectionStart - 1),\n    position: selectionStart - 1\n  };\n};\n/**\n * Handle key down events\n *\n * @param initialValue Current value of input\n * @param key Key that was pressed\n * @param format MaskFormat object\n * @param selectionStart Starting index value of selection cursor\n * @param selectionEnd Ending Index value of selection cursor\n */\n\nexport var keyHandler = function keyHandler(initialValue, key, format, selectionStart, selectionEnd) {\n  var value = initialValue;\n  var position = selectionStart; // return if no more digits can be added at the end\n\n  if (selectionStart === value.length && value.length === format.getMaxLength()) {\n    return {\n      value: value,\n      position: position\n    };\n  } // if range is selected to the end, remove all of that selection first\n\n\n  if (selectionStart !== value.length && selectionEnd === value.length) {\n    var sliceEnd = format.isCursorAtSeparator(selectionStart) ? selectionStart + 1 : selectionStart;\n    value = initialValue.slice(0, sliceEnd);\n  }\n\n  if (format.isCursorAtSeparator(position)) {\n    return {\n      value: value,\n      position: position + 1\n    };\n  }\n\n  return format.processKey(value, key, position);\n};\nexport var enterHandler = function enterHandler(value, format) {\n  var autoCompletedValue = format.autoComplete(value);\n  var position = autoCompletedValue.length;\n  return {\n    value: autoCompletedValue,\n    position: position\n  };\n};","map":null,"metadata":{},"sourceType":"module"}