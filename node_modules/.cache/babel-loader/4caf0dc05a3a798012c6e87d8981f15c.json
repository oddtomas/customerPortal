{"ast":null,"code":"import { __rest } from \"tslib\";\nexport var flattenOptions = function flattenOptions(options) {\n  var parentMap = new Map();\n  var flatOptions = options.reduce(function (acc, option) {\n    if ('options' in option) {\n      var options_1 = option.options,\n          rest_1 = __rest(option, [\"options\"]);\n\n      var parentDropdownOption_1 = {\n        type: 'parent',\n        option: option\n      };\n      var allOptionsDisabled = options_1.every(function (option) {\n        return option.disabled;\n      });\n\n      if (option.disabled || allOptionsDisabled) {\n        parentDropdownOption_1.disabled = true;\n      }\n\n      acc.push(parentDropdownOption_1);\n      options_1.forEach(function (child) {\n        var childDropdownOption = {\n          type: 'child',\n          option: child\n        };\n\n        if (rest_1.disabled || child.disabled) {\n          childDropdownOption.disabled = true;\n        }\n\n        acc.push(childDropdownOption);\n        parentMap.set(childDropdownOption, parentDropdownOption_1);\n      });\n    } else {\n      var dropdownOption = {\n        option: option\n      };\n\n      if (option.disabled) {\n        dropdownOption.disabled = true;\n      }\n\n      acc.push(dropdownOption);\n    }\n\n    return acc;\n  }, []);\n  return {\n    flatOptions: flatOptions,\n    parentMap: parentMap\n  };\n};","map":null,"metadata":{},"sourceType":"module"}