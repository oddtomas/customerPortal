{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useRef } from 'react';\nimport InternalBox from '../../../box/internal';\nimport { InternalButton } from '../../../button/internal';\nimport InternalSpaceBetween from '../../../space-between/internal';\nimport styles from './styles.css.js';\nimport { fireNonCancelableEvent } from '../../../internal/events/index';\nimport { CongratulationScreen } from './congratulation-screen';\nimport { TaskList } from './task-list';\nimport { useVisualRefresh } from '../../../internal/hooks/use-visual-mode';\nexport default function TutorialDetailView(_a) {\n  var tutorial = _a.tutorial,\n      onExitTutorialHandler = _a.onExitTutorial,\n      _b = _a.currentStepIndex,\n      currentStepIndex = _b === void 0 ? 0 : _b,\n      onFeedbackClickHandler = _a.onFeedbackClick,\n      i18nStrings = _a.i18nStrings;\n  var refreshRef = useRef(null);\n  var isRefresh = useVisualRefresh(refreshRef);\n  var onExitTutorial = useCallback(function () {\n    fireNonCancelableEvent(onExitTutorialHandler, {\n      tutorial: tutorial\n    });\n  }, [onExitTutorialHandler, tutorial]);\n  var onFeedbackClick = useCallback(function () {\n    fireNonCancelableEvent(onFeedbackClickHandler, {\n      tutorial: tutorial\n    });\n  }, [onFeedbackClickHandler, tutorial]);\n  return React.createElement(React.Fragment, null, React.createElement(InternalSpaceBetween, {\n    size: \"xl\"\n  }, React.createElement(\"div\", {\n    className: styles['tutorial-title'],\n    ref: refreshRef\n  }, React.createElement(InternalButton, {\n    variant: \"icon\",\n    onClick: onExitTutorial,\n    ariaLabel: i18nStrings.labelExitTutorial,\n    formAction: \"none\",\n    iconName: \"arrow-left\"\n  }), React.createElement(InternalBox, {\n    variant: \"h2\",\n    fontSize: isRefresh ? 'heading-m' : 'heading-l',\n    padding: {\n      top: 'xxs'\n    },\n    margin: {\n      left: 's'\n    }\n  }, tutorial.title)), tutorial.completed ? React.createElement(CongratulationScreen, {\n    onFeedbackClick: onFeedbackClick,\n    i18nStrings: i18nStrings\n  }, tutorial.completedScreenDescription) : React.createElement(TaskList, {\n    tasks: tutorial.tasks,\n    onExitTutorial: onExitTutorial,\n    currentGlobalStepIndex: currentStepIndex,\n    i18nStrings: i18nStrings\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}