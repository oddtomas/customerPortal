{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../../base-component';\nimport PopoverContainer from '../../../popover/container';\nimport PopoverBody from '../../../popover/body';\nimport popoverStyles from '../../../popover/styles.css.js';\nimport { nodeContains } from '../../utils/dom';\nimport styles from './styles.css.js';\nexport default function ChartPopover(_a) {\n  var _b;\n\n  var _c = _a.position,\n      position = _c === void 0 ? 'right' : _c,\n      _d = _a.size,\n      size = _d === void 0 ? 'medium' : _d,\n      _e = _a.fixedWidth,\n      fixedWidth = _e === void 0 ? false : _e,\n      _f = _a.dismissButton,\n      dismissButton = _f === void 0 ? false : _f,\n      dismissAriaLabel = _a.dismissAriaLabel,\n      children = _a.children,\n      title = _a.title,\n      trackRef = _a.trackRef,\n      trackKey = _a.trackKey,\n      onDismiss = _a.onDismiss,\n      container = _a.container,\n      restProps = __rest(_a, [\"position\", \"size\", \"fixedWidth\", \"dismissButton\", \"dismissAriaLabel\", \"children\", \"title\", \"trackRef\", \"trackKey\", \"onDismiss\", \"container\"]);\n\n  var baseProps = getBaseProps(restProps);\n  var popoverRef = useRef(null);\n  useEffect(function () {\n    var onDocumentClick = function onDocumentClick(event) {\n      if (event.target && !nodeContains(popoverRef.current, event.target) && // click not in popover\n      !nodeContains(container, event.target) // click not in segment\n      ) {\n        onDismiss(true);\n      }\n    };\n\n    document.addEventListener('mousedown', onDocumentClick, {\n      capture: true\n    });\n    return function () {\n      document.removeEventListener('mousedown', onDocumentClick, {\n        capture: true\n      });\n    };\n  }, [container, onDismiss]);\n  return React.createElement(\"span\", __assign({}, baseProps, {\n    className: clsx(popoverStyles.root, styles.root, baseProps.className, (_b = {}, _b[styles.dismissable] = dismissButton, _b)),\n    ref: popoverRef\n  }), React.createElement(PopoverContainer, {\n    position: position,\n    trackRef: trackRef,\n    trackKey: trackKey,\n    arrow: function arrow(position) {\n      return React.createElement(\"div\", {\n        className: clsx(popoverStyles.arrow, popoverStyles[\"arrow-position-\".concat(position)])\n      }, React.createElement(\"div\", {\n        className: popoverStyles['arrow-outer']\n      }), React.createElement(\"div\", {\n        className: popoverStyles['arrow-inner']\n      }));\n    }\n  }, React.createElement(PopoverBody, {\n    size: size,\n    fixedWidth: fixedWidth,\n    dismissButton: dismissButton,\n    dismissAriaLabel: dismissAriaLabel,\n    returnFocus: false,\n    header: title,\n    onDismiss: onDismiss\n  }, children)));\n}","map":null,"metadata":{},"sourceType":"module"}