{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport InternalBox from '../../box/internal';\nimport { InternalButton } from '../../button/internal';\nimport InternalSpaceBetween from '../../space-between/internal';\nimport PopoverContainer from '../../popover/container';\nimport PopoverBody from '../../popover/body';\nimport InternalAlert from '../../alert/internal';\nimport { scrollElementIntoView } from '../../internal/utils/scrollable-containers';\n\nvar arrow = function arrow(position) {\n  return React.createElement(\"div\", {\n    className: clsx(styles.arrow, styles[\"arrow-position-\".concat(position)])\n  }, React.createElement(\"div\", {\n    className: styles['arrow-outer']\n  }), React.createElement(\"div\", {\n    className: styles['arrow-inner']\n  }));\n};\n\nexport function AnnotationPopover(_a) {\n  var title = _a.title,\n      content = _a.content,\n      alert = _a.alert,\n      _b = _a.direction,\n      direction = _b === void 0 ? 'top' : _b,\n      taskLocalStepIndex = _a.taskLocalStepIndex,\n      totalLocalSteps = _a.totalLocalSteps,\n      showPreviousButton = _a.showPreviousButton,\n      showFinishButton = _a.showFinishButton,\n      onDismiss = _a.onDismiss,\n      nextButtonEnabled = _a.nextButtonEnabled,\n      onNextButtonClick = _a.onNextButtonClick,\n      onFinish = _a.onFinish,\n      trackRef = _a.trackRef,\n      previousButtonEnabled = _a.previousButtonEnabled,\n      onPreviousButtonClick = _a.onPreviousButtonClick,\n      i18nStrings = _a.i18nStrings;\n  var preventDefault = useCallback(function (event) {\n    event.preventDefault();\n  }, []);\n  var dismissButtonRefCallback = useCallback(function (element) {\n    var _a;\n\n    if (element) {\n      element.focus({\n        preventScroll: true\n      }); // Falls back to alignTop on IE11\n\n      scrollElementIntoView((_a = trackRef.current) !== null && _a !== void 0 ? _a : undefined);\n    }\n  }, [trackRef]);\n  return React.createElement(PopoverContainer, {\n    position: direction,\n    trackRef: trackRef,\n    trackKey: taskLocalStepIndex,\n    arrow: arrow,\n    zIndex: 1000\n  }, React.createElement(\"div\", {\n    onClick: preventDefault\n  }, React.createElement(PopoverBody, {\n    size: \"medium\",\n    fixedWidth: false,\n    dismissButton: true,\n    dismissAriaLabel: i18nStrings.labelDismissAnnotation,\n    header: React.createElement(InternalBox, {\n      color: \"text-body-secondary\",\n      fontSize: \"body-s\",\n      margin: {\n        top: 'xxxs'\n      },\n      className: styles.header\n    }, title),\n    onDismiss: onDismiss,\n    className: styles.annotation,\n    variant: \"annotation\",\n    overflowVisible: \"content\",\n    dismissButtonRef: dismissButtonRefCallback\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"s\"\n  }, React.createElement(\"div\", {\n    className: styles.description\n  }, React.createElement(InternalBox, {\n    className: styles.content\n  }, content)), alert && React.createElement(InternalAlert, {\n    type: \"warning\"\n  }, alert), React.createElement(InternalSpaceBetween, {\n    size: \"s\"\n  }, React.createElement(\"div\", {\n    className: styles.divider\n  }), React.createElement(\"div\", {\n    className: styles.actionBar\n  }, React.createElement(\"div\", {\n    className: styles.stepCounter\n  }, React.createElement(InternalBox, {\n    className: styles['step-counter-content'],\n    color: \"text-body-secondary\",\n    fontSize: \"body-s\"\n  }, i18nStrings.stepCounterText(taskLocalStepIndex !== null && taskLocalStepIndex !== void 0 ? taskLocalStepIndex : 0, totalLocalSteps !== null && totalLocalSteps !== void 0 ? totalLocalSteps : 0))), React.createElement(InternalSpaceBetween, {\n    size: \"xs\",\n    direction: \"horizontal\"\n  }, showPreviousButton && React.createElement(InternalButton, {\n    variant: \"link\",\n    onClick: onPreviousButtonClick,\n    disabled: !previousButtonEnabled,\n    formAction: \"none\",\n    ariaLabel: i18nStrings.previousButtonText,\n    className: styles['previous-button']\n  }, i18nStrings.previousButtonText), showFinishButton ? React.createElement(InternalButton, {\n    onClick: onFinish,\n    formAction: \"none\",\n    ariaLabel: i18nStrings.finishButtonText,\n    className: styles['finish-button']\n  }, i18nStrings.finishButtonText) : React.createElement(InternalButton, {\n    onClick: onNextButtonClick,\n    disabled: !nextButtonEnabled,\n    formAction: \"none\",\n    ariaLabel: i18nStrings.nextButtonText,\n    className: styles['next-button']\n  }, i18nStrings.nextButtonText))))))));\n}","map":null,"metadata":{},"sourceType":"module"}