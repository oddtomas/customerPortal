{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport InternalInput from '../input/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport styles from './styles.css.js';\nvar InternalTextFilter = React.forwardRef(function (_a, ref) {\n  var filteringText = _a.filteringText,\n      filteringAriaLabel = _a.filteringAriaLabel,\n      filteringPlaceholder = _a.filteringPlaceholder,\n      disabled = _a.disabled,\n      countText = _a.countText,\n      _onChange = _a.onChange,\n      onDelayedChange = _a.onDelayedChange,\n      __internalRootRef = _a.__internalRootRef,\n      rest = __rest(_a, [\"filteringText\", \"filteringAriaLabel\", \"filteringPlaceholder\", \"disabled\", \"countText\", \"onChange\", \"onDelayedChange\", \"__internalRootRef\"]);\n\n  var inputRef = useRef(null);\n  var baseProps = getBaseProps(rest);\n  useForwardFocus(ref, inputRef);\n  var showResults = filteringText && countText && !disabled;\n  return React.createElement(\"span\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: __internalRootRef\n  }), React.createElement(InternalInput, {\n    ref: inputRef,\n    className: styles.input,\n    type: \"search\",\n    ariaLabel: filteringAriaLabel,\n    placeholder: filteringPlaceholder,\n    value: filteringText,\n    disabled: disabled,\n    autoComplete: false,\n    onChange: function onChange(event) {\n      return fireNonCancelableEvent(_onChange, {\n        filteringText: event.detail.value\n      });\n    },\n    __onDelayedInput: function __onDelayedInput(event) {\n      return fireNonCancelableEvent(onDelayedChange, {\n        filteringText: event.detail.value\n      });\n    }\n  }), React.createElement(\"span\", {\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\",\n    className: clsx(styles.results, showResults && styles['results-visible'])\n  }, showResults ? countText : ''));\n});\nexport default InternalTextFilter;","map":null,"metadata":{},"sourceType":"module"}