{"ast":null,"code":"export function setupEditor(ace, editor, setAnnotations, setCursorPosition, setHighlightedAnnotation, setPaneStatus) {\n  ace.config.loadModule('ace/ext/language_tools', function () {\n    editor.setOptions({\n      displayIndentGuides: false,\n      enableSnippets: true,\n      enableBasicAutocompletion: true\n    });\n  });\n  editor.setAutoScrollEditorIntoView(true); // To display cursor position in status bar\n\n  editor.session.selection.on('changeCursor', function () {\n    setCursorPosition(editor.getCursorPosition());\n  });\n  editor.session.on('changeAnnotation', function () {\n    var editorAnnotations = editor.session.getAnnotations();\n    var newAnnotations = editorAnnotations.filter(function (a) {\n      return a.type !== 'info';\n    });\n\n    if (editorAnnotations.length !== newAnnotations.length) {\n      editor.session.setAnnotations(newAnnotations);\n    }\n\n    setAnnotations(newAnnotations);\n  });\n  editor.commands.addCommand({\n    name: 'exitCodeEditor',\n    bindKey: 'Esc',\n    exec: function exec() {\n      editor.container.focus();\n    }\n  });\n  editor.on('focus', function () {\n    editor.textInput.getElement().setAttribute('tabindex', 0);\n  });\n  editor.on('blur', function () {\n    editor.textInput.getElement().setAttribute('tabindex', -1);\n  }); // prevent users to step into editor directly by keyboard\n\n  editor.textInput.getElement().setAttribute('tabindex', -1);\n  editor.commands.removeCommand('showSettingsMenu', false); // Prevent default behavior on error/warning icon click\n\n  editor.on('guttermousedown', function (e) {\n    e.stop();\n  });\n\n  var moveCursorToAnnotation = function moveCursorToAnnotation(a) {\n    if (typeof a.row === 'number') {\n      editor.gotoLine(a.row + 1, a.column || 0, false);\n    }\n  }; // open error/warning pane when user clicks on gutter icon\n\n\n  editor.on('gutterclick', function (e) {\n    var row = e.getDocumentPosition().row;\n    var currentAnnotations = editor.session.getAnnotations().filter(function (a) {\n      return a.row === row && a.type !== 'info';\n    });\n    var errors = currentAnnotations.filter(function (a) {\n      return a.type === 'error';\n    });\n\n    if (errors.length > 0) {\n      setHighlightedAnnotation(errors[0]);\n      setPaneStatus('error');\n      moveCursorToAnnotation(errors[0]);\n    } else if (currentAnnotations.length > 0) {\n      setHighlightedAnnotation(currentAnnotations[0]);\n      setPaneStatus('warning');\n      moveCursorToAnnotation(currentAnnotations[0]);\n    } else {\n      setHighlightedAnnotation(undefined);\n      setPaneStatus('hidden');\n      editor.gotoLine(row + 1, 0, false);\n    }\n  }); // HACK: Wrapped lines are highlighted individually. This is seriously the recommended fix.\n  // See: https://github.com/ajaxorg/ace/issues/3067\n\n  editor.setHighlightActiveLine(false);\n\n  editor.$updateHighlightActiveLine = function () {\n    var session = this.getSession();\n    var highlight;\n\n    if (this.$highlightActiveLine) {\n      if (this.$selectionStyle !== 'line' || !this.selection.isMultiLine()) {\n        highlight = this.getCursorPosition();\n      }\n\n      if (this.renderer.$maxLines && this.session.getLength() === 1 && !(this.renderer.$minLines > 1)) {\n        highlight = false;\n      }\n    }\n\n    if (session.$highlightLineMarker && !highlight) {\n      session.removeMarker(session.$highlightLineMarker.id);\n      session.$highlightLineMarker = null;\n    } else if (!session.$highlightLineMarker && highlight) {\n      var range = new ace.Range(highlight.row, 0, highlight.row, Infinity);\n      range.id = session.addMarker(range, 'ace_active-line', 'fullLine');\n      session.$highlightLineMarker = range;\n    } else if (highlight) {\n      session.$highlightLineMarker.start.row = highlight.row;\n      session.$highlightLineMarker.end.row = highlight.row;\n      session.$highlightLineMarker.start.column = 0;\n\n      session._signal('changeBackMarker');\n    }\n  };\n\n  editor.setHighlightActiveLine(true); // HACK: Annotations aren't cleared when editor is empty.\n\n  editor.on('change', function () {\n    if (editor.getValue().length === 0) {\n      editor.session.clearAnnotations();\n    }\n  }); // HACK: \"disable\" error tooltips by hiding them as soon as they appear.\n  // See https://github.com/ajaxorg/ace/issues/4004\n\n  editor.on('showGutterTooltip', function (tooltip) {\n    tooltip.hide();\n  });\n}","map":null,"metadata":{},"sourceType":"module"}