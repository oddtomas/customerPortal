{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport createCategoryColorScale from '../../internal/utils/create-category-color-scale';\nexport default function createSeriesDecorator(externalSeries) {\n  var colorScale = createCategoryColorScale(externalSeries, function (s) {\n    return s.type === 'threshold';\n  }, function (s) {\n    return s.color || null;\n  });\n\n  var decorateSeries = function decorateSeries(s, index) {\n    var title = s.title;\n    var color = colorScale[index];\n    var markerType = s.type === 'area' ? 'hollow-rectangle' : 'dashed';\n    var formatValue = s.type === 'threshold' ? function () {\n      return s.valueFormatter ? s.valueFormatter(s.y) : s.y;\n    } : function (y, x) {\n      return s.valueFormatter ? s.valueFormatter(y, x) : y;\n    };\n    return {\n      series: s,\n      title: title,\n      color: color,\n      markerType: markerType,\n      formatValue: formatValue\n    };\n  }; // Map external series to internal ones.\n\n\n  var mapping = externalSeries.reduce(function (map, series, index) {\n    map.set(series, decorateSeries(series, index));\n    return map;\n  }, new Map()); // It is inconvenient to use internal series everywhere, that's\n  // why we also provide a decorator function to get the internal series on demand.\n\n  var seriesDecorator = function seriesDecorator(series) {\n    return mapping.get(series) || decorateSeries(series, externalSeries.length);\n  };\n\n  return seriesDecorator;\n}","map":null,"metadata":{},"sourceType":"module"}