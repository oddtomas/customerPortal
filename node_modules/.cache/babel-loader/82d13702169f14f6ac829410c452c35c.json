{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport InternalIcon from '../../icon/internal';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport useFocusVisible from '../../internal/hooks/focus-visible';\nimport { fireCancelableEvent, isPlainLeftClick } from '../../internal/events';\nimport { getEventDetail } from '../internal';\nexport function BreadcrumbItem(_a) {\n  var _b;\n\n  var item = _a.item,\n      onClick = _a.onClick,\n      onFollow = _a.onFollow,\n      _c = _a.isLast,\n      isLast = _c === void 0 ? false : _c,\n      _d = _a.isCompressed,\n      isCompressed = _d === void 0 ? false : _d;\n  var focusVisible = useFocusVisible();\n\n  var preventDefault = function preventDefault(event) {\n    return event.preventDefault();\n  };\n\n  var onClickHandler = function onClickHandler(event) {\n    if (isPlainLeftClick(event)) {\n      fireCancelableEvent(onFollow, getEventDetail(item), event);\n    }\n\n    fireCancelableEvent(onClick, getEventDetail(item), event);\n  };\n\n  return React.createElement(\"div\", {\n    className: clsx(styles.breadcrumb, isLast && styles.last)\n  }, React.createElement(\"a\", __assign({}, focusVisible, {\n    href: item.href || '#',\n    className: clsx(styles.anchor, (_b = {}, _b[styles.compressed] = isCompressed, _b)),\n    \"aria-current\": isLast ? 'page' : undefined,\n    \"aria-disabled\": isLast && 'true',\n    onClick: isLast ? preventDefault : onClickHandler\n  }), React.createElement(\"span\", {\n    className: styles.text\n  }, item.text)), !isLast ? React.createElement(\"span\", {\n    className: styles.icon\n  }, React.createElement(InternalIcon, {\n    name: \"angle-right\"\n  })) : null);\n}","map":null,"metadata":{},"sourceType":"module"}