{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useRef } from 'react';\nimport { useTelemetry } from '../use-telemetry';\nimport { PACKAGE_VERSION } from '../../environment';\nexport var COMPONENT_METADATA_KEY = '__awsuiMetadata__';\n/**\n * This hook is used for components which are exported to customers. The returned __internalRootRef needs to be\n * attached to the (internal) component's root DOM node. The hook takes care of attaching the metadata to this\n * root DOM node and emits the telemetry for this component.\n */\n\nexport default function useBaseComponent(componentName) {\n  var elementRef = useRef(null);\n  useTelemetry(componentName);\n  useComponentMetadata(componentName, elementRef);\n  return {\n    __internalRootRef: elementRef\n  };\n}\n\nfunction useComponentMetadata(componentName, elementRef) {\n  useEffect(function () {\n    if (elementRef.current && !Object.prototype.hasOwnProperty.call(elementRef.current, COMPONENT_METADATA_KEY)) {\n      var node = elementRef.current;\n      var metadata = {\n        name: componentName,\n        version: PACKAGE_VERSION\n      };\n      Object.freeze(metadata);\n      Object.defineProperty(node, COMPONENT_METADATA_KEY, {\n        value: metadata,\n        writable: false\n      });\n    } // Some component refs change dynamically. E.g. The Modal component where\n    // the content gets rendered conditionally inside a Portal.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [elementRef.current]);\n}","map":null,"metadata":{},"sourceType":"module"}