{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport InternalIcon from '../icon/internal';\nimport InternalSpinner from '../spinner/internal';\n\nvar typeToIcon = function typeToIcon(size) {\n  return {\n    error: React.createElement(InternalIcon, {\n      name: \"status-negative\",\n      size: size\n    }),\n    warning: React.createElement(InternalIcon, {\n      name: \"status-warning\",\n      size: size\n    }),\n    success: React.createElement(InternalIcon, {\n      name: \"status-positive\",\n      size: size\n    }),\n    info: React.createElement(InternalIcon, {\n      name: \"status-info\",\n      size: size\n    }),\n    stopped: React.createElement(InternalIcon, {\n      name: \"status-stopped\",\n      size: size\n    }),\n    pending: React.createElement(InternalIcon, {\n      name: \"status-pending\",\n      size: size\n    }),\n    'in-progress': React.createElement(InternalIcon, {\n      name: \"status-in-progress\",\n      size: size\n    }),\n    loading: React.createElement(InternalSpinner, null)\n  };\n};\n\nexport default function StatusIndicator(_a) {\n  var _b;\n\n  var type = _a.type,\n      children = _a.children,\n      iconAriaLabel = _a.iconAriaLabel,\n      colorOverride = _a.colorOverride,\n      _c = _a.wrapText,\n      wrapText = _c === void 0 ? true : _c,\n      _d = _a.__animate,\n      __animate = _d === void 0 ? false : _d,\n      __internalRootRef = _a.__internalRootRef,\n      _e = _a.__size,\n      __size = _e === void 0 ? 'normal' : _e,\n      rest = __rest(_a, [\"type\", \"children\", \"iconAriaLabel\", \"colorOverride\", \"wrapText\", \"__animate\", \"__internalRootRef\", \"__size\"]);\n\n  var baseProps = getBaseProps(rest);\n  return React.createElement(\"span\", __assign({}, baseProps, {\n    className: clsx(styles.root, styles[\"status-\".concat(type)], (_b = {}, _b[styles[\"color-override-\".concat(colorOverride)]] = colorOverride, _b), baseProps.className),\n    ref: __internalRootRef\n  }), React.createElement(\"span\", {\n    className: clsx(styles.container, wrapText === false && styles['overflow-ellipsis'], __animate && styles['container-fade-in'])\n  }, React.createElement(\"span\", {\n    className: clsx(styles.icon, __animate && styles['icon-shake']),\n    \"aria-label\": iconAriaLabel,\n    role: iconAriaLabel ? 'img' : undefined\n  }, typeToIcon(__size)[type]), children));\n}","map":null,"metadata":{},"sourceType":"module"}