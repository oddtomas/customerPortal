{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport ItemElement from './item-element';\nimport ExpandableCategoryElement from './category-elements/expandable-category-element';\nimport CategoryElement from './category-elements/category-element';\nimport { isItemGroup } from './utils/utils';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport MobileExpandableCategoryElement from './category-elements/mobile-expandable-category-element';\nexport default function ItemsList(_a) {\n  var items = _a.items,\n      onItemActivate = _a.onItemActivate,\n      onGroupToggle = _a.onGroupToggle,\n      targetItem = _a.targetItem,\n      isHighlighted = _a.isHighlighted,\n      isExpanded = _a.isExpanded,\n      highlightItem = _a.highlightItem,\n      _b = _a.categoryDisabled,\n      categoryDisabled = _b === void 0 ? false : _b,\n      _c = _a.hasExpandableGroups,\n      hasExpandableGroups = _c === void 0 ? false : _c,\n      _d = _a.hasCategoryHeader,\n      hasCategoryHeader = _d === void 0 ? false : _d,\n      _e = _a.expandToViewport,\n      expandToViewport = _e === void 0 ? false : _e,\n      _f = _a.variant,\n      variant = _f === void 0 ? 'normal' : _f;\n  var isMobile = useMobile();\n  var elements = items.map(function (item, index) {\n    var _a, _b, _c, _d;\n\n    if (!isItemGroup(item)) {\n      return React.createElement(ItemElement, {\n        key: index,\n        item: item,\n        onItemActivate: onItemActivate,\n        disabled: (_a = item.disabled) !== null && _a !== void 0 ? _a : categoryDisabled,\n        highlighted: isHighlighted(item),\n        highlightItem: highlightItem,\n        first: index === 0 || isItemGroup(items[index - 1]),\n        last: index === items.length - 1 || isItemGroup(items[index + 1]),\n        hasCategoryHeader: hasCategoryHeader,\n        variant: variant\n      });\n    }\n\n    if (hasExpandableGroups) {\n      return item.text ? isMobile ? React.createElement(MobileExpandableCategoryElement, {\n        key: index,\n        item: item,\n        onItemActivate: onItemActivate,\n        onGroupToggle: onGroupToggle,\n        targetItem: targetItem,\n        isHighlighted: isHighlighted,\n        isExpanded: isExpanded,\n        highlightItem: highlightItem,\n        disabled: (_b = item.disabled) !== null && _b !== void 0 ? _b : false,\n        variant: variant\n      }) : React.createElement(ExpandableCategoryElement, {\n        key: index,\n        item: item,\n        onItemActivate: onItemActivate,\n        onGroupToggle: onGroupToggle,\n        targetItem: targetItem,\n        isHighlighted: isHighlighted,\n        isExpanded: isExpanded,\n        highlightItem: highlightItem,\n        disabled: (_c = item.disabled) !== null && _c !== void 0 ? _c : false,\n        expandToViewport: expandToViewport,\n        variant: variant\n      }) : null;\n    }\n\n    return React.createElement(CategoryElement, {\n      key: index,\n      item: item,\n      onItemActivate: onItemActivate,\n      onGroupToggle: onGroupToggle,\n      targetItem: targetItem,\n      isHighlighted: isHighlighted,\n      isExpanded: isExpanded,\n      highlightItem: highlightItem,\n      disabled: (_d = item.disabled) !== null && _d !== void 0 ? _d : false,\n      variant: variant\n    });\n  });\n  return React.createElement(React.Fragment, null, elements);\n}","map":null,"metadata":{},"sourceType":"module"}