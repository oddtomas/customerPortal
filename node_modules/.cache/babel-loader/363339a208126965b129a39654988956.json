{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport { compareDates, getColumnAriaLabel, includes } from './table-utils';\nimport InternalIcon from '../../icon/internal';\nimport InternalLink from '../../link/internal';\nimport { formatSize, formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { joinObjectPath } from '../utils';\nexport function ObjectsTable(_a) {\n  var forwardFocusRef = _a.forwardFocusRef,\n      pathSegments = _a.pathSegments,\n      i18nStrings = _a.i18nStrings,\n      isVisualRefresh = _a.isVisualRefresh,\n      isItemDisabled = _a.isItemDisabled,\n      selectableItemsTypes = _a.selectableItemsTypes,\n      _fetchData = _a.fetchData,\n      visibleColumns = _a.visibleColumns,\n      onDrilldown = _a.onDrilldown,\n      _onSelect = _a.onSelect;\n  return React.createElement(BasicS3Table, {\n    // remount fresh component every we change the path to reset the inner state (e.g. selection/filtering)\n    key: pathSegments.join('/'),\n    forwardFocusRef: forwardFocusRef,\n    trackBy: \"Key\",\n    fetchData: function fetchData() {\n      var bucketName = pathSegments[0],\n          rest = pathSegments.slice(1);\n      return _fetchData(bucketName, joinObjectPath(rest));\n    },\n    i18nStrings: __assign(__assign({}, getSharedI18Strings(i18nStrings)), {\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjects,\n      filteringAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelFiltering(i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjects),\n      filteringPlaceholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsSearchPlaceholder,\n      loadingText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsLoading,\n      emptyText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsNoItems,\n      selectionLabels: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsObjectsSelection\n    }),\n    isVisualRefresh: isVisualRefresh,\n    visibleColumns: visibleColumns,\n    isItemDisabled: isItemDisabled || function () {\n      return !includes(selectableItemsTypes, 'objects');\n    },\n    columnDefinitions: [{\n      id: 'Key',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectKey,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectKey),\n      sortingField: 'Key',\n      cell: function cell(item) {\n        var isClickable = item.IsFolder || includes(selectableItemsTypes, 'versions');\n        return React.createElement(React.Fragment, null, React.createElement(InternalIcon, {\n          name: item.IsFolder ? 'folder' : 'file'\n        }), ' ', isClickable ? React.createElement(InternalLink, {\n          onFollow: function onFollow() {\n            return item.Key && onDrilldown(item);\n          },\n          variant: \"link\"\n        }, item.Key) : item.Key);\n      },\n      minWidth: '250px'\n    }, {\n      id: 'LastModified',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectLastModified,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectLastModified),\n      sortingComparator: function sortingComparator(a, b) {\n        return compareDates(a.LastModified, b.LastModified);\n      },\n      cell: function cell(item) {\n        return formatDefault(item.LastModified);\n      }\n    }, {\n      id: 'Size',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectSize,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectSize),\n      sortingField: 'Size',\n      cell: function cell(item) {\n        return formatSize(item.Size);\n      }\n    }],\n    onSelect: function onSelect(item) {\n      var _a;\n\n      return _onSelect((_a = item === null || item === void 0 ? void 0 : item.Key) !== null && _a !== void 0 ? _a : '');\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}