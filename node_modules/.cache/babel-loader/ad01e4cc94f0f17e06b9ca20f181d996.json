{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport FocusLock from 'react-focus-lock';\nimport { ResizableBox } from 'react-resizable';\nimport { KeyCode } from '../internal/keycode';\nimport { scrollElementIntoView } from '../internal/utils/scrollable-containers';\nimport { InternalButton } from '../button/internal';\nimport handler from './resize-handler';\nimport styles from './styles.css.js';\nvar ANNOTATION_ITEM_HEIGHT = 31;\nvar PANE_ANNOTATIONS_PADDING = 12;\nvar MIN_HEIGHT = 3 * ANNOTATION_ITEM_HEIGHT + 2 * PANE_ANNOTATIONS_PADDING;\nexport var Pane = function Pane(_a) {\n  var id = _a.id,\n      visible = _a.visible,\n      annotations = _a.annotations,\n      highlighted = _a.highlighted,\n      onAllowlist = _a.onAllowlist,\n      onClose = _a.onClose,\n      onAnnotationClick = _a.onAnnotationClick,\n      onAnnotationClear = _a.onAnnotationClear,\n      cursorPositionLabel = _a.cursorPositionLabel,\n      closeButtonAriaLabel = _a.closeButtonAriaLabel;\n  var listRef = useRef(null);\n\n  var _b = useState(false),\n      isFocusTrapActive = _b[0],\n      setFocusTrapActive = _b[1];\n\n  useEffect(function () {\n    var _a;\n\n    if (!highlighted) {\n      return;\n    }\n\n    var row = highlighted.row,\n        column = highlighted.column;\n    var highlightedAnnotationIndex = annotations.indexOf(annotations.filter(function (a) {\n      return a.row === row && a.column === column;\n    })[0]);\n\n    if (highlightedAnnotationIndex > -1) {\n      var errorItem = (_a = listRef.current) === null || _a === void 0 ? void 0 : _a.children[highlightedAnnotationIndex];\n      scrollElementIntoView(errorItem);\n    }\n  }, [highlighted, annotations]);\n\n  var onItemFocus = function onItemFocus() {\n    setFocusTrapActive(true);\n    onAnnotationClear();\n  };\n\n  var onItemClick = function onItemClick(annotation) {\n    setFocusTrapActive(false);\n    onAnnotationClick(annotation);\n  };\n\n  var onItemKeyDown = function onItemKeyDown(annotation, event) {\n    if (event.keyCode === KeyCode.enter || event.keyCode === KeyCode.space) {\n      event.preventDefault();\n      setFocusTrapActive(false);\n      onAnnotationClick(annotation);\n    }\n  };\n\n  var onEscKeyDown = function onEscKeyDown(event) {\n    if (event.keyCode === KeyCode.escape) {\n      event.preventDefault();\n      setFocusTrapActive(false);\n      onClose();\n    }\n  };\n\n  if (!visible) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    id: id,\n    className: styles.pane,\n    onKeyDown: onEscKeyDown,\n    role: \"tabpanel\"\n  }, React.createElement(ResizableBox, {\n    className: styles['resizable-box'],\n    width: Infinity,\n    height: MIN_HEIGHT,\n    minConstraints: [Infinity, MIN_HEIGHT],\n    axis: \"y\",\n    handle: handler\n  }, React.createElement(FocusLock, {\n    disabled: !isFocusTrapActive,\n    className: styles['focus-lock'],\n    autoFocus: false,\n    returnFocus: false,\n    whiteList: onAllowlist\n  }, React.createElement(\"div\", {\n    className: styles.pane__list,\n    tabIndex: -1\n  }, React.createElement(\"table\", {\n    className: styles.pane__table,\n    role: \"presentation\"\n  }, React.createElement(\"colgroup\", null, React.createElement(\"col\", {\n    style: {\n      width: 1\n    }\n    /* shrink to fit content */\n\n  }), React.createElement(\"col\", {\n    style: {\n      width: 'auto'\n    }\n  })), React.createElement(\"tbody\", {\n    ref: listRef\n  }, annotations.map(function (annotation, i) {\n    var _a;\n\n    return React.createElement(\"tr\", {\n      key: i,\n      className: clsx(styles.pane__item, (_a = {}, _a[styles['pane__item--highlighted']] = annotation === highlighted, _a)),\n      onFocus: onItemFocus,\n      onMouseOver: onAnnotationClear,\n      onClick: onItemClick.bind(null, annotation),\n      onKeyDown: onItemKeyDown.bind(null, annotation),\n      tabIndex: 0,\n      role: \"link\"\n    }, React.createElement(\"td\", {\n      className: clsx(styles.pane__location, styles.pane__cell),\n      tabIndex: -1\n    }, cursorPositionLabel((annotation.row || 0) + 1, (annotation.column || 0) + 1)), React.createElement(\"td\", {\n      className: clsx(styles.pane__description, styles.pane__cell),\n      tabIndex: -1\n    }, annotation.text));\n  })))), React.createElement(\"div\", {\n    className: styles['pane__close-container']\n  }, React.createElement(InternalButton, {\n    formAction: \"none\",\n    variant: \"icon\",\n    iconName: \"close\",\n    onClick: onClose,\n    ariaLabel: closeButtonAriaLabel\n  })))));\n};","map":null,"metadata":{},"sourceType":"module"}