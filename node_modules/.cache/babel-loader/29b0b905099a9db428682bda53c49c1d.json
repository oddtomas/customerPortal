{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport Item from '../parts/item';\nimport MutliselectItem from '../parts/multiselect-item';\nimport { getItemProps } from './get-item-props';\nexport var renderOptions = function renderOptions(_a) {\n  var options = _a.options,\n      getOptionProps = _a.getOptionProps,\n      filteringValue = _a.filteringValue,\n      _b = _a.isKeyboard,\n      isKeyboard = _b === void 0 ? false : _b,\n      _c = _a.checkboxes,\n      checkboxes = _c === void 0 ? false : _c,\n      hasDropdownStatus = _a.hasDropdownStatus,\n      virtualItems = _a.virtualItems,\n      useInteractiveGroups = _a.useInteractiveGroups,\n      screenReaderContent = _a.screenReaderContent,\n      ariaSetsize = _a.ariaSetsize;\n  return options.map(function (option, index) {\n    var virtualItem = virtualItems && virtualItems[index];\n    var globalIndex = virtualItem ? virtualItem.index : index;\n    var props = getItemProps({\n      option: option,\n      index: globalIndex,\n      getOptionProps: getOptionProps,\n      filteringValue: filteringValue,\n      isKeyboard: isKeyboard,\n      checkboxes: checkboxes\n    });\n    var isLastItem = index === options.length - 1;\n    var padBottom = !hasDropdownStatus && isLastItem;\n    var ListItem = useInteractiveGroups ? MutliselectItem : Item;\n    return React.createElement(ListItem, __assign({\n      key: globalIndex\n    }, props, {\n      virtualPosition: virtualItem && virtualItem.start,\n      ref: virtualItem && virtualItem.measureRef,\n      padBottom: padBottom,\n      screenReaderContent: screenReaderContent,\n      ariaPosinset: globalIndex + 1,\n      ariaSetsize: ariaSetsize\n    }));\n  });\n};","map":null,"metadata":{},"sourceType":"module"}