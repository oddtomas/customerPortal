{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useState } from 'react';\nexport function createHighlightedOptionHook(_a) {\n  var isHighlightable = _a.isHighlightable;\n  return function useHighlightedOption(options) {\n    var _a = useState(-1),\n        highlightedIndex = _a[0],\n        setHighlightedIndex = _a[1];\n\n    var highlightedOption = options[highlightedIndex] && isHighlightable(options[highlightedIndex]) ? options[highlightedIndex] : undefined;\n\n    var moveHighlightFrom = function moveHighlightFrom(direction, startIndex) {\n      if (startIndex === void 0) {\n        startIndex = highlightedIndex;\n      }\n\n      var newIndex = startIndex;\n\n      do {\n        newIndex += direction;\n      } while (options[newIndex] && !isHighlightable(options[newIndex]));\n\n      if (options[newIndex]) {\n        setHighlightedIndex(newIndex);\n      }\n    };\n\n    var moveHighlight = function moveHighlight(direction) {\n      return moveHighlightFrom(direction);\n    };\n\n    var highlightOption = useCallback(function (option) {\n      var index = options.indexOf(option);\n      setHighlightedIndex(index);\n    }, [options]);\n    return {\n      setHighlightedIndex: setHighlightedIndex,\n      highlightedIndex: highlightedIndex,\n      highlightedOption: highlightedOption,\n      moveHighlight: moveHighlight,\n      resetHighlight: function resetHighlight() {\n        return setHighlightedIndex(-1);\n      },\n      goHome: function goHome() {\n        return moveHighlightFrom(1, -1);\n      },\n      goEnd: function goEnd() {\n        return moveHighlightFrom(-1, options.length);\n      },\n      highlightOption: highlightOption\n    };\n  };\n}","map":null,"metadata":{},"sourceType":"module"}