{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport InternalLink from '../../link/internal';\nimport { compareDates, getColumnAriaLabel, includes } from './table-utils';\nimport { formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nexport function BucketsTable(_a) {\n  var forwardFocusRef = _a.forwardFocusRef,\n      i18nStrings = _a.i18nStrings,\n      isVisualRefresh = _a.isVisualRefresh,\n      isItemDisabled = _a.isItemDisabled,\n      selectableItemsTypes = _a.selectableItemsTypes,\n      fetchData = _a.fetchData,\n      visibleColumns = _a.visibleColumns,\n      onDrilldown = _a.onDrilldown,\n      _onSelect = _a.onSelect;\n  return React.createElement(BasicS3Table, {\n    forwardFocusRef: forwardFocusRef,\n    trackBy: \"Name\",\n    fetchData: fetchData,\n    visibleColumns: visibleColumns,\n    isItemDisabled: isItemDisabled || function () {\n      return !includes(selectableItemsTypes, 'buckets');\n    },\n    i18nStrings: __assign(__assign({}, getSharedI18Strings(i18nStrings)), {\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBuckets,\n      loadingText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBucketsLoading,\n      filteringAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelFiltering(i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBuckets),\n      filteringPlaceholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBucketsSearchPlaceholder,\n      emptyText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBucketsNoItems,\n      selectionLabels: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsBucketsSelection\n    }),\n    isVisualRefresh: isVisualRefresh,\n    columnDefinitions: [{\n      id: 'Name',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketName,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketName),\n      sortingField: 'Name',\n      cell: function cell(item) {\n        var isClickable = includes(selectableItemsTypes, 'objects') || includes(selectableItemsTypes, 'versions');\n        return isClickable ? React.createElement(InternalLink, {\n          onFollow: function onFollow() {\n            return item.Name && onDrilldown(item.Name);\n          },\n          variant: \"link\"\n        }, item.Name) : item.Name;\n      },\n      minWidth: '250px'\n    }, {\n      id: 'CreationDate',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketCreationDate,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketCreationDate),\n      sortingComparator: function sortingComparator(a, b) {\n        return compareDates(a.CreationDate, b.CreationDate);\n      },\n      cell: function cell(item) {\n        return formatDefault(item.CreationDate);\n      }\n    }, {\n      id: 'Region',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketRegion,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketRegion),\n      sortingField: 'Region',\n      cell: function cell(item) {\n        return formatDefault(item.Region);\n      },\n      minWidth: '150px'\n    }],\n    onSelect: function onSelect(item) {\n      var _a;\n\n      return _onSelect((_a = item === null || item === void 0 ? void 0 : item.Name) !== null && _a !== void 0 ? _a : '');\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}