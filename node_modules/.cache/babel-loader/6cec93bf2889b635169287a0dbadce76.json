{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo } from 'react';\nimport { fireNonCancelableEvent } from '../../events';\nimport InternalStatusIndicator from '../../../status-indicator/internal';\nimport InternalLink from '../../../link/internal';\nimport styles from './styles.css.js';\nexport function getChartStatus(_a) {\n  var externalData = _a.externalData,\n      visibleData = _a.visibleData,\n      statusType = _a.statusType;\n  var isEmpty = !visibleData || visibleData.length === 0;\n  var isNoMatch = isEmpty && visibleData.length !== externalData.length;\n  var showChart = statusType === 'finished' && !isEmpty;\n  return {\n    isEmpty: isEmpty,\n    isNoMatch: isNoMatch,\n    showChart: showChart\n  };\n}\n\nvar ChartStatusContainer = function ChartStatusContainer(_a) {\n  var statusType = _a.statusType,\n      errorText = _a.errorText,\n      loadingText = _a.loadingText,\n      recoveryText = _a.recoveryText,\n      noMatch = _a.noMatch,\n      empty = _a.empty,\n      onRecoveryClick = _a.onRecoveryClick,\n      isNoMatch = _a.isNoMatch,\n      isEmpty = _a.isEmpty,\n      showChart = _a.showChart;\n  var statusContainer = useMemo(function () {\n    var handleRecoveryClick = function handleRecoveryClick(event) {\n      event.preventDefault();\n      fireNonCancelableEvent(onRecoveryClick);\n    };\n\n    if (statusType === 'error') {\n      return React.createElement(\"span\", null, React.createElement(InternalStatusIndicator, {\n        type: \"error\"\n      }, errorText), ' ', recoveryText && React.createElement(InternalLink, {\n        onFollow: handleRecoveryClick,\n        variant: \"recovery\"\n      }, recoveryText));\n    }\n\n    if (statusType === 'loading') {\n      return React.createElement(InternalStatusIndicator, {\n        type: \"loading\"\n      }, loadingText);\n    }\n\n    if (isNoMatch) {\n      return React.createElement(\"div\", {\n        className: styles.empty\n      }, noMatch);\n    }\n\n    if (isEmpty) {\n      return React.createElement(\"div\", {\n        className: styles.empty\n      }, empty);\n    }\n  }, [statusType, onRecoveryClick, isEmpty, isNoMatch, recoveryText, loadingText, errorText, empty, noMatch]);\n  return React.createElement(\"div\", {\n    className: styles.root,\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\"\n  }, !showChart && statusContainer);\n};\n\nexport default ChartStatusContainer;","map":null,"metadata":{},"sourceType":"module"}