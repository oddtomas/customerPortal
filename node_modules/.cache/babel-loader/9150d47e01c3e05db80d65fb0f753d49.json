{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { InternalButton } from '../../button/internal';\nimport styles from './styles.css.js';\nexport var togglesConfig = {\n  navigation: {\n    TagName: 'nav',\n    iconName: 'menu',\n    getLabels: function getLabels(labels) {\n      if (labels === void 0) {\n        labels = {};\n      }\n\n      return {\n        mainLabel: labels.navigation,\n        openLabel: labels.navigationToggle,\n        closeLabel: labels.navigationClose\n      };\n    }\n  },\n  tools: {\n    TagName: 'aside',\n    iconName: 'status-info',\n    getLabels: function getLabels(labels) {\n      if (labels === void 0) {\n        labels = {};\n      }\n\n      return {\n        mainLabel: labels.tools,\n        openLabel: labels.toolsToggle,\n        closeLabel: labels.toolsClose\n      };\n    }\n  }\n};\nexport var AppLayoutButton = React.forwardRef(function (_a, ref) {\n  var className = _a.className,\n      ariaLabel = _a.ariaLabel,\n      ariaExpanded = _a.ariaExpanded,\n      iconName = _a.iconName,\n      disabled = _a.disabled,\n      onClick = _a.onClick;\n  return React.createElement(InternalButton, {\n    ref: ref,\n    className: className,\n    ariaLabel: ariaLabel,\n    variant: \"icon\",\n    formAction: \"none\",\n    onClick: onClick,\n    iconName: iconName,\n    disabled: disabled,\n    ariaExpanded: ariaExpanded\n  });\n});\nexport var CloseButton = React.forwardRef(function (_a, ref) {\n  var className = _a.className,\n      ariaLabel = _a.ariaLabel,\n      onClick = _a.onClick,\n      iconName = _a.iconName;\n  return React.createElement(\"span\", {\n    className: styles['close-button']\n  }, React.createElement(AppLayoutButton, {\n    ref: ref,\n    className: className,\n    ariaLabel: ariaLabel,\n    iconName: iconName,\n    onClick: onClick\n  }));\n});","map":null,"metadata":{},"sourceType":"module"}