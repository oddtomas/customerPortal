{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { useStickyPosition } from '../utils/use-sticky-position';\n\nvar StaticNotifications = function StaticNotifications(_a) {\n  var testUtilsClassName = _a.testUtilsClassName,\n      children = _a.children,\n      labels = _a.labels;\n  return React.createElement(\"div\", {\n    className: clsx(testUtilsClassName),\n    role: \"region\",\n    \"aria-label\": labels === null || labels === void 0 ? void 0 : labels.notifications\n  }, children);\n};\n\nvar StickyNotifications = function StickyNotifications(props) {\n  var _a = useStickyPosition(props.topOffset),\n      stickyRef = _a[0],\n      placeholder = _a[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    ref: stickyRef,\n    className: styles['notifications-sticky']\n  }, React.createElement(StaticNotifications, __assign({}, props))), placeholder);\n};\n\nexport var Notifications = React.forwardRef(function (_a, ref) {\n  var navigationPadding = _a.navigationPadding,\n      toolsPadding = _a.toolsPadding,\n      sticky = _a.sticky,\n      isMobile = _a.isMobile,\n      rest = __rest(_a, [\"navigationPadding\", \"toolsPadding\", \"sticky\", \"isMobile\"]);\n\n  var notificationsProps = __assign({\n    isMobile: isMobile\n  }, rest);\n\n  return React.createElement(\"div\", {\n    ref: ref,\n    className: clsx(isMobile && styles['root-mobile'], !navigationPadding && styles['root-no-navigation-padding'], !toolsPadding && styles['root-no-tools-padding'])\n  }, sticky ? React.createElement(StickyNotifications, __assign({}, notificationsProps)) : React.createElement(StaticNotifications, __assign({}, notificationsProps)));\n});","map":null,"metadata":{},"sourceType":"module"}