{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useImperativeHandle, useRef } from 'react';\nimport InternalSegmentedControl from '../segmented-control/internal';\nimport segmentedControlStyles from '../segmented-control/styles.css.js';\nimport buttonTriggerStyles from '../internal/components/button-trigger/styles.css.js';\nimport styles from './styles.css.js';\nexport default forwardRef(ModeSwitcher);\n\nfunction ModeSwitcher(_a, ref) {\n  var i18nStrings = _a.i18nStrings,\n      mode = _a.mode,\n      _onChange = _a.onChange;\n  var elementRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        if (elementRef.current) {\n          elementRef.current.getElementsByClassName(segmentedControlStyles.selected)[0].focus();\n          var select = elementRef.current.getElementsByClassName(buttonTriggerStyles['button-trigger']);\n\n          for (var _i = 0, _a = Array.prototype.slice.call(select); _i < _a.length; _i++) {\n            var button = _a[_i];\n            button.focus();\n          }\n        }\n      }\n    };\n  });\n  return React.createElement(\"div\", {\n    ref: elementRef\n  }, React.createElement(InternalSegmentedControl, {\n    className: styles['mode-switch'],\n    selectedId: mode,\n    options: [{\n      id: 'relative',\n      text: i18nStrings.relativeModeTitle\n    }, {\n      id: 'absolute',\n      text: i18nStrings.absoluteModeTitle\n    }],\n    onChange: function onChange(e) {\n      return _onChange(e.detail.selectedId);\n    }\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}