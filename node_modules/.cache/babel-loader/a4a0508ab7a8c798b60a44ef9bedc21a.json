{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport flattenChildren from 'react-keyed-flatten-children';\nimport InternalGrid from '../grid/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { repeat } from './util';\nimport styles from './styles.css.js';\nexport var COLUMN_TRIGGERS = ['default', 'xxs', 'xs'];\nvar COLUMN_DEFS = {\n  1: {\n    colspan: {\n      \"default\": 12,\n      xxs: 12,\n      xs: 12\n    }\n  },\n  2: {\n    colspan: {\n      \"default\": 12,\n      xxs: 6,\n      xs: 6\n    }\n  },\n  3: {\n    colspan: {\n      \"default\": 12,\n      xxs: 6,\n      xs: 4\n    }\n  },\n  4: {\n    colspan: {\n      \"default\": 12,\n      xxs: 6,\n      xs: 3\n    }\n  }\n};\n/**\n * A responsive grid layout.\n */\n\nexport default React.forwardRef(function ColumnLayout(_a, ref) {\n  var _b;\n\n  var _c;\n\n  var _d = _a.columns,\n      columns = _d === void 0 ? 1 : _d,\n      _e = _a.variant,\n      variant = _e === void 0 ? 'default' : _e,\n      _f = _a.borders,\n      borders = _f === void 0 ? 'none' : _f,\n      _g = _a.disableGutters,\n      disableGutters = _g === void 0 ? false : _g,\n      children = _a.children,\n      __breakpoint = _a.__breakpoint,\n      __internalRootRef = _a.__internalRootRef,\n      restProps = __rest(_a, [\"columns\", \"variant\", \"borders\", \"disableGutters\", \"children\", \"__breakpoint\", \"__internalRootRef\"]);\n\n  var baseProps = getBaseProps(restProps);\n  var isTextGridVariant = variant === 'text-grid';\n  var shouldDisableGutters = !isTextGridVariant && disableGutters;\n  var shouldHaveHorizontalBorders = !isTextGridVariant && (borders === 'horizontal' || borders === 'all');\n  var shouldHaveVerticalBorders = !isTextGridVariant && (borders === 'vertical' || borders === 'all');\n  /*\n   Flattening the children allows us to \"see through\" React Fragments and nested arrays.\n   */\n\n  var flattenedChildren = flattenChildren(children);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles['column-layout']),\n    ref: __internalRootRef\n  }), React.createElement(InternalGrid, {\n    ref: ref,\n    disableGutters: true,\n    gridDefinition: repeat((_c = COLUMN_DEFS[columns]) !== null && _c !== void 0 ? _c : {}, flattenedChildren.length),\n    className: clsx(styles.grid, styles[\"grid-columns-\".concat(columns)], styles[\"grid-variant-\".concat(variant)], (_b = {}, _b[styles['grid-horizontal-borders']] = shouldHaveHorizontalBorders, _b[styles['grid-vertical-borders']] = shouldHaveVerticalBorders, _b[styles['grid-no-gutters']] = shouldDisableGutters, _b)),\n    __breakpoint: __breakpoint,\n    __responsiveClassName: function __responsiveClassName(breakpoint) {\n      return breakpoint && styles[\"grid-breakpoint-\".concat(breakpoint)];\n    }\n  }, children));\n});","map":null,"metadata":{},"sourceType":"module"}