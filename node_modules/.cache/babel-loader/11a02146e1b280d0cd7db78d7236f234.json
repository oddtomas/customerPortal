{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport AnnotationTrigger from './annotation-trigger';\nimport { AnnotationPopover } from './annotation-popover';\nexport function OpenAnnotation(_a) {\n  var title = _a.title,\n      content = _a.content,\n      alert = _a.alert,\n      direction = _a.direction,\n      showPreviousButton = _a.showPreviousButton,\n      showFinishButton = _a.showFinishButton,\n      taskLocalStepIndex = _a.taskLocalStepIndex,\n      totalLocalSteps = _a.totalLocalSteps,\n      onDismiss = _a.onDismiss,\n      nextButtonEnabled = _a.nextButtonEnabled,\n      onNextButtonClick = _a.onNextButtonClick,\n      onFinish = _a.onFinish,\n      previousButtonEnabled = _a.previousButtonEnabled,\n      onPreviousButtonClick = _a.onPreviousButtonClick,\n      i18nStrings = _a.i18nStrings;\n  var trackRef = useRef(null);\n  return React.createElement(React.Fragment, null, React.createElement(AnnotationTrigger, {\n    open: true,\n    onClick: onDismiss,\n    i18nStrings: i18nStrings,\n    ref: trackRef\n  }), React.createElement(AnnotationPopover, {\n    trackRef: trackRef,\n    previousButtonEnabled: previousButtonEnabled,\n    showPreviousButton: showPreviousButton,\n    showFinishButton: showFinishButton,\n    totalLocalSteps: totalLocalSteps,\n    i18nStrings: i18nStrings,\n    nextButtonEnabled: nextButtonEnabled,\n    onDismiss: onDismiss,\n    onFinish: onFinish,\n    onNextButtonClick: onNextButtonClick,\n    onPreviousButtonClick: onPreviousButtonClick,\n    taskLocalStepIndex: taskLocalStepIndex,\n    direction: direction,\n    title: title,\n    content: content,\n    alert: alert\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}