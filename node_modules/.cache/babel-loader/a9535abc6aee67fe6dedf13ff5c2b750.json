{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useState } from 'react';\nimport { useObservedElement } from './use-observed-element';\nexport default function useContentHeight(headerSelector, footerSelector, disableBodyScroll) {\n  var _a;\n\n  var headerHeight = useObservedElement(headerSelector);\n  var footerHeight = useObservedElement(footerSelector);\n\n  var _b = useState(0),\n      headerFooterHeight = _b[0],\n      setHeaderFooterHeight = _b[1]; // Delay applying changes in header/footer height, as applying them immediately can cause\n  // ResizeOberver warnings due to the algorithm thinking that the change might have side-effects\n  // further up the tree, therefore blocking notifications to prevent loops\n\n\n  useEffect(function () {\n    var id = requestAnimationFrame(function () {\n      return setHeaderFooterHeight(headerHeight + footerHeight);\n    });\n    return function () {\n      return cancelAnimationFrame(id);\n    };\n  }, [headerHeight, footerHeight]);\n  var heightStyleValue = \"calc(100vh - \".concat(headerFooterHeight, \"px)\");\n  return {\n    headerHeight: headerHeight,\n    footerHeight: footerHeight,\n    contentHeightStyle: (_a = {}, _a[disableBodyScroll ? 'height' : 'minHeight'] = heightStyleValue, _a),\n    panelHeightStyle: {\n      height: heightStyleValue\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}