{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport { getBaseProps } from '../../base-component';\nimport { useVisualRefresh } from '../../hooks/use-visual-mode';\nimport styles from './styles.css.js'; // Can't use css variables for svg attributes\n\nexport var dimensionsByTheme = {\n  \"default\": {\n    viewBox: '0 0 14 14',\n    indeterminate: '2.5,7 11.5,7',\n    checked: '2.5,7 6,10 11,3',\n    xy: 0.5,\n    r: 1.5,\n    size: 13\n  },\n  refresh: {\n    viewBox: '0 0 16 16',\n    indeterminate: '3.5,8 12.5,8',\n    checked: '3.5,8 7,11 12,4',\n    xy: 1,\n    r: 2,\n    size: 14\n  }\n};\n\nvar CheckboxIcon = function CheckboxIcon(_a) {\n  var _b, _c;\n\n  var checked = _a.checked,\n      indeterminate = _a.indeterminate,\n      _d = _a.disabled,\n      disabled = _d === void 0 ? false : _d,\n      restProps = __rest(_a, [\"checked\", \"indeterminate\", \"disabled\"]);\n\n  var baseProps = getBaseProps(restProps);\n  var checkboxRef = useRef(null);\n  var theme = useVisualRefresh(checkboxRef) ? 'refresh' : 'default';\n  var dimensions = dimensionsByTheme[theme];\n  return React.createElement(\"svg\", __assign({\n    className: styles.root,\n    viewBox: dimensions.viewBox,\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    ref: checkboxRef\n  }, baseProps), React.createElement(\"rect\", {\n    className: clsx(styles['styled-box'], (_b = {}, _b[styles['styled-box-checked']] = checked, _b[styles['styled-box-indeterminate']] = indeterminate, _b[styles['styled-box-disabled']] = disabled, _b)),\n    x: dimensions.xy,\n    y: dimensions.xy,\n    rx: dimensions.r,\n    ry: dimensions.r,\n    width: dimensions.size,\n    height: dimensions.size\n  }), checked || indeterminate ? React.createElement(\"polyline\", {\n    className: clsx(styles['styled-line'], (_c = {}, _c[styles['styled-line-disabled']] = disabled, _c)),\n    points: indeterminate ? dimensions.indeterminate : dimensions.checked\n  }) : null);\n};\n\nexport default CheckboxIcon;","map":null,"metadata":{},"sourceType":"module"}