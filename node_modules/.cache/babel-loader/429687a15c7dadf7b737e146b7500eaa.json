{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\n\nvar splitOnFiltering = function splitOnFiltering(str, highlightText) {\n  // Filtering needs to be case insensitive\n  var filteringPattern = highlightText.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&');\n  var regexp = new RegExp(filteringPattern, 'gi');\n  var noMatches = str.split(regexp);\n  var matches = str.match(regexp);\n  return {\n    noMatches: noMatches,\n    matches: matches\n  };\n};\n\nvar Highlight = function Highlight(_a) {\n  var str = _a.str;\n  return str ? React.createElement(\"span\", {\n    className: clsx(styles['filtering-match-highlight'])\n  }, str) : null;\n};\n\nexport default function HighlightMatch(_a) {\n  var str = _a.str,\n      highlightText = _a.highlightText;\n\n  if (!str || !highlightText) {\n    return React.createElement(React.Fragment, null, str);\n  }\n\n  if (str === highlightText) {\n    return React.createElement(Highlight, {\n      str: str\n    });\n  }\n\n  var _b = splitOnFiltering(str, highlightText),\n      noMatches = _b.noMatches,\n      matches = _b.matches;\n\n  var highlighted = [];\n  noMatches.forEach(function (noMatch, idx) {\n    highlighted.push(noMatch);\n\n    if (matches && idx < matches.length) {\n      highlighted.push(React.createElement(Highlight, {\n        key: idx,\n        str: matches[idx]\n      }));\n    }\n  });\n  return React.createElement(\"span\", null, highlighted);\n}","map":null,"metadata":{},"sourceType":"module"}