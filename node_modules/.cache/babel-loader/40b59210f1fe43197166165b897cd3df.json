{"ast":null,"code":"// https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html\nvar SCHEME = 's3://';\nvar BUCKET_FIRST_CHAR = /^[a-z0-9]{1}/;\nvar CAPITAL_LETTER = /[A-Z]/;\nvar DNS_NAME = /^(([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])\\.)*([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])$/;\n\nfunction checkBucketNameLength(bucketName) {\n  return 3 <= bucketName.length && bucketName.length <= 63;\n}\n\nexport function extractBucketName(uri) {\n  var _a = uri.replace(SCHEME, '').split('/'),\n      bucketName = _a[0],\n      rest = _a.slice(1);\n\n  return [bucketName, rest.join('/')];\n}\nexport function validate(uri) {\n  if (uri === '') {\n    return undefined;\n  }\n\n  if (uri.slice(0, SCHEME.length) !== SCHEME) {\n    return 'validationPathMustBegin';\n  }\n\n  var bucketName = extractBucketName(uri)[0];\n\n  if (!BUCKET_FIRST_CHAR.test(bucketName)) {\n    return 'validationBucketLowerCase';\n  }\n\n  if (CAPITAL_LETTER.test(bucketName)) {\n    return 'validationBucketMustNotContain';\n  }\n\n  if (!checkBucketNameLength(bucketName)) {\n    return 'validationBucketLength';\n  }\n\n  if (!DNS_NAME.test(bucketName)) {\n    return 'validationBucketMustComplyDns';\n  }\n\n  return undefined;\n}\nexport function getErrorText(i18nStrings, errorCode) {\n  return errorCode ? i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings[errorCode] : undefined;\n}","map":null,"metadata":{},"sourceType":"module"}