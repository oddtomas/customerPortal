{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo, useEffect } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { useContainerQuery } from '../../hooks/container-queries';\nexport default memo(LabelsMeasure); // Places the invisible left-hand side labels to calculate their maximum width.\n\nfunction LabelsMeasure(_a) {\n  var scale = _a.scale,\n      ticks = _a.ticks,\n      tickFormatter = _a.tickFormatter,\n      autoWidth = _a.autoWidth;\n\n  var _b = useContainerQuery(function (rect) {\n    return rect.width;\n  }),\n      width = _b[0],\n      ref = _b[1]; // Tell elements's width to the parent.\n\n\n  useEffect(function () {\n    autoWidth(width || 0);\n  }, [autoWidth, width]);\n\n  var labelMapper = function labelMapper(value) {\n    var scaledValue = scale.d3Scale(value);\n\n    if (scaledValue === undefined || !isFinite(scaledValue)) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      key: \"\".concat(value),\n      className: styles['labels-left__label'],\n      \"aria-hidden\": \"true\"\n    }, tickFormatter ? tickFormatter(value) : value.toString());\n  };\n\n  return React.createElement(\"div\", {\n    ref: ref,\n    className: clsx(styles['labels-left'], styles['labels-left--hidden'])\n  }, ticks.map(labelMapper));\n}","map":null,"metadata":{},"sourceType":"module"}