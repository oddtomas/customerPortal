{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState } from 'react';\nimport { ALWAYS_VISUAL_REFRESH } from '../../environment';\nimport { isMotionDisabled } from '../../motion';\nimport { findUpUntil } from '../../utils/dom';\nimport { useMutationObserver } from '../use-mutation-observer';\nexport function useCurrentMode(elementRef) {\n  var _a = useState('light'),\n      value = _a[0],\n      setValue = _a[1];\n\n  useMutationObserver(elementRef, function (node) {\n    var darkModeParent = findUpUntil(node, function (node) {\n      return node.classList.contains('awsui-polaris-dark-mode') || node.classList.contains('awsui-dark-mode');\n    });\n    setValue(darkModeParent ? 'dark' : 'light');\n  });\n  return value;\n}\nexport function useDensityMode(elementRef) {\n  var _a = useState('comfortable'),\n      value = _a[0],\n      setValue = _a[1];\n\n  useMutationObserver(elementRef, function (node) {\n    var compactModeParent = findUpUntil(node, function (node) {\n      return node.classList.contains('awsui-polaris-compact-mode') || node.classList.contains('awsui-compact-mode');\n    });\n    setValue(compactModeParent ? 'compact' : 'comfortable');\n  });\n  return value;\n}\nexport function useVisualRefresh(elementRef) {\n  var _a = useState(Boolean(ALWAYS_VISUAL_REFRESH)),\n      value = _a[0],\n      setValue = _a[1];\n\n  useMutationObserver(elementRef, function (node) {\n    var _a, _b;\n\n    var supportsCSSVariables = (_b = (_a = window.CSS) === null || _a === void 0 ? void 0 : _a.supports) === null || _b === void 0 ? void 0 : _b.call(_a, 'color', 'var(--test-var)');\n\n    if (!supportsCSSVariables || ALWAYS_VISUAL_REFRESH) {\n      return;\n    }\n\n    var visualRefreshParent = findUpUntil(node, function (node) {\n      return node.classList.contains('awsui-visual-refresh');\n    });\n    setValue(!!visualRefreshParent);\n  });\n  return value;\n}\nexport function useReducedMotion(elementRef) {\n  var _a = useState(false),\n      value = _a[0],\n      setValue = _a[1];\n\n  useMutationObserver(elementRef, function (node) {\n    setValue(isMotionDisabled(node));\n  });\n  return value;\n}","map":null,"metadata":{},"sourceType":"module"}