{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport InternalIcon from '../icon/internal';\nimport InternalSpinner from '../spinner/internal';\nimport styles from './styles.css.js';\n\nfunction getIconAlign(props) {\n  var standalone = props.variant === 'icon' || props.variant === 'inline-icon';\n  return standalone ? 'left' : props.iconAlign;\n}\n\nfunction IconWrapper(_a) {\n  var iconName = _a.iconName,\n      iconUrl = _a.iconUrl,\n      iconAlt = _a.iconAlt,\n      iconSvg = _a.iconSvg,\n      iconSize = _a.iconSize,\n      props = __rest(_a, [\"iconName\", \"iconUrl\", \"iconAlt\", \"iconSvg\", \"iconSize\"]);\n\n  if (!iconName && !iconUrl && !iconSvg) {\n    return null;\n  }\n\n  return React.createElement(InternalIcon, {\n    className: clsx(styles.icon, styles[\"icon-\".concat(getIconAlign(props))], props.iconClass),\n    name: iconName,\n    url: iconUrl,\n    svg: iconSvg,\n    alt: iconAlt,\n    size: iconSize\n  });\n}\n\nexport function LeftIcon(props) {\n  if (props.loading) {\n    return React.createElement(InternalSpinner, {\n      className: clsx(styles.icon, styles['icon-left'])\n    });\n  } else if (getIconAlign(props) === 'left') {\n    return React.createElement(IconWrapper, __assign({}, props));\n  }\n\n  return null;\n}\nexport function RightIcon(props) {\n  if (getIconAlign(props) === 'right') {\n    return React.createElement(IconWrapper, __assign({}, props));\n  }\n\n  return null;\n}","map":null,"metadata":{},"sourceType":"module"}