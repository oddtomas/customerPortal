{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React, { useContext } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport TutorialList from './components/tutorial-list';\nimport TutorialDetailView from './components/tutorial-detail-view';\nimport { hotspotContext } from '../annotation-context/context';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nvar defaultFilteringFunction = function defaultFilteringFunction(tutorial, searchTerm) {\n  var _a;\n\n  if (searchTerm === '') {\n    return true;\n  }\n\n  return ((_a = tutorial.title) === null || _a === void 0 ? void 0 : _a.toLowerCase().indexOf(searchTerm.toLowerCase())) !== -1;\n};\n\nexport default function TutorialPanel(_a) {\n  var i18nStrings = _a.i18nStrings,\n      loading = _a.loading,\n      tutorials = _a.tutorials,\n      onFeedbackClick = _a.onFeedbackClick,\n      downloadUrl = _a.downloadUrl,\n      // Filtering is not available in the Beta release.\n  //filteringFunction: customFilteringFunction,\n  restProps = __rest(_a, [\"i18nStrings\", \"loading\", \"tutorials\", \"onFeedbackClick\", \"downloadUrl\"]);\n\n  var __internalRootRef = useBaseComponent('TutorialPanel').__internalRootRef;\n\n  var baseProps = getBaseProps(restProps);\n  var context = useContext(hotspotContext); //const filteringFunction = customFilteringFunction ?? defaultFilteringFunction;\n\n  var filteringFunction = defaultFilteringFunction;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles['tutorial-panel']),\n    ref: __internalRootRef\n  }), context.currentTutorial ? React.createElement(TutorialDetailView, {\n    i18nStrings: i18nStrings,\n    tutorial: context.currentTutorial,\n    onExitTutorial: context.onExitTutorial,\n    currentStepIndex: context.currentStepIndex,\n    onFeedbackClick: onFeedbackClick\n  }) : React.createElement(TutorialList, {\n    i18nStrings: i18nStrings,\n    tutorials: tutorials,\n    loading: loading,\n    onStartTutorial: context.onStartTutorial,\n    filteringFunction: filteringFunction,\n    downloadUrl: downloadUrl\n  })));\n}\napplyDisplayName(TutorialPanel, 'TutorialPanel');","map":null,"metadata":{},"sourceType":"module"}