{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React, { forwardRef, useContext, useImperativeHandle, useRef, useState } from 'react';\nimport { StickyHeaderContext } from '../container/use-sticky-header';\nimport Thead from './thead';\nimport { useStickyHeader } from './use-sticky-header';\nimport styles from './styles.css.js';\nexport default forwardRef(StickyHeader);\n\nfunction StickyHeader(_a, ref) {\n  var _b;\n\n  var variant = _a.variant,\n      theadProps = _a.theadProps,\n      wrapperRef = _a.wrapperRef,\n      theadRef = _a.theadRef,\n      secondaryWrapperRef = _a.secondaryWrapperRef,\n      onScroll = _a.onScroll,\n      tableRef = _a.tableRef;\n  var secondaryTheadRef = useRef(null);\n  var secondaryTableRef = useRef(null);\n  var isStuck = useContext(StickyHeaderContext).isStuck;\n\n  var _c = useState(null),\n      focusedColumn = _c[0],\n      setFocusedColumn = _c[1];\n\n  var _d = useStickyHeader(tableRef, theadRef, secondaryTheadRef, secondaryTableRef, wrapperRef),\n      scrollToRow = _d.scrollToRow,\n      scrollToTop = _d.scrollToTop;\n\n  useImperativeHandle(ref, function () {\n    return {\n      scrollToTop: scrollToTop,\n      scrollToRow: scrollToRow,\n      setFocusedColumn: setFocusedColumn\n    };\n  });\n  return React.createElement(\"div\", {\n    className: clsx(styles['header-secondary'], styles[\"variant-\".concat(variant)], (_b = {}, _b[styles.stuck] = isStuck, _b)),\n    \"aria-hidden\": true,\n    // Prevents receiving focus in Firefox. Focus on the overflowing table is sufficient\n    // to scroll the table horizontally\n    tabIndex: -1,\n    ref: secondaryWrapperRef,\n    onScroll: onScroll\n  }, React.createElement(\"table\", {\n    className: clsx(styles.table, styles['table-layout-fixed']),\n    role: \"table\",\n    ref: secondaryTableRef\n  }, React.createElement(Thead, __assign({\n    ref: secondaryTheadRef,\n    sticky: true,\n    stuck: isStuck,\n    showFocusRing: focusedColumn\n  }, theadProps))));\n}","map":null,"metadata":{},"sourceType":"module"}