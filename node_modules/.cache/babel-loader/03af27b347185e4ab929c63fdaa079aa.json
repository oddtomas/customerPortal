{"ast":null,"code":"import { __spreadArray } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { isItemGroup } from './utils';\nexport default function createItemsTree(items) {\n  var itemToIndex = new Map();\n  var indexToItem = new Map();\n  var flatIndices = [];\n  traverseItems(items, function (item, index) {\n    var indexKey = stringifyIndex(index);\n    itemToIndex.set(item, indexKey);\n    indexToItem.set(indexKey, item);\n    flatIndices.push(indexKey);\n  });\n  return {\n    getItem: function getItem(index) {\n      var indexKey = stringifyIndex(index);\n      return indexToItem.get(indexKey) || null;\n    },\n    getItemIndex: function getItemIndex(item) {\n      var indexKey = itemToIndex.get(item);\n\n      if (!indexKey) {\n        throw new Error('Invariant violation: item is not found.');\n      }\n\n      return parseIndex(indexKey);\n    },\n    getSequentialIndex: function getSequentialIndex(index, direction) {\n      var indexKey = stringifyIndex(index);\n      var position = flatIndices.indexOf(indexKey);\n      var nextIndexKey = flatIndices[position + direction];\n\n      if (!nextIndexKey) {\n        return null;\n      }\n\n      return parseIndex(nextIndexKey);\n    },\n    getParentIndex: function getParentIndex(item) {\n      var indexKey = itemToIndex.get(item);\n\n      if (!indexKey) {\n        throw new Error('Invariant violation: item is not found.');\n      }\n\n      var index = parseIndex(indexKey); // No parent\n\n      if (index.length === 1) {\n        return null;\n      }\n\n      return index.slice(0, index.length - 1);\n    }\n  };\n}\n\nfunction traverseItems(items, act, parentIndex) {\n  if (parentIndex === void 0) {\n    parentIndex = [];\n  }\n\n  items.forEach(function (item, index) {\n    var itemIndex = __spreadArray(__spreadArray([], parentIndex, true), [index], false);\n\n    act(item, itemIndex);\n\n    if (isItemGroup(item)) {\n      traverseItems(item.items, act, itemIndex);\n    }\n  });\n}\n\nfunction stringifyIndex(index) {\n  return index.join('-');\n}\n\nfunction parseIndex(index) {\n  return index.split('-').map(function (it) {\n    return parseInt(it);\n  });\n}","map":null,"metadata":{},"sourceType":"module"}