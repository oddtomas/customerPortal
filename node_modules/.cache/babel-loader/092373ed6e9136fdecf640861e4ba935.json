{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React from 'react';\nimport { Drawer } from './drawer';\nimport { SplitPanelWrapper } from './split-panel-wrapper';\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\nexport function ToolsAndSplitPanel(_a) {\n  var _b;\n\n  var ariaLabels = _a.ariaLabels,\n      drawerWidth = _a.drawerWidth,\n      footerHeight = _a.footerHeight,\n      headerHeight = _a.headerHeight,\n      isHidden = _a.isHidden,\n      isMobile = _a.isMobile,\n      onToolsToggle = _a.onToolsToggle,\n      panelHeightStyle = _a.panelHeightStyle,\n      splitPanel = _a.splitPanel,\n      splitPanelContext = _a.splitPanelContext,\n      toggleRefs = _a.toggleRefs,\n      tools = _a.tools,\n      toolsHide = _a.toolsHide,\n      toolsOpen = _a.toolsOpen,\n      toolsWidth = _a.toolsWidth,\n      splitPanelOpen = _a.splitPanelOpen;\n  var splitPanelVisible = splitPanelOpen && Boolean(splitPanel);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    style: {\n      width: drawerWidth\n    }\n  }, React.createElement(\"div\", {\n    className: clsx(styles['panel-wrapper-outer'], (_b = {}, _b[styles.mobile] = isMobile, _b[styles.open] = toolsOpen, _b)),\n    style: __assign({}, isMobile ? {\n      top: headerHeight,\n      bottom: footerHeight\n    } : panelHeightStyle)\n  }, splitPanel && React.createElement(SplitPanelWrapper, {\n    context: splitPanelContext\n  }, splitPanel), !toolsHide && React.createElement(Drawer, {\n    type: \"tools\",\n    isMobile: isMobile,\n    width: toolsWidth,\n    isOpen: toolsOpen,\n    onToggle: onToolsToggle,\n    toggleRefs: toggleRefs,\n    isHidden: isHidden,\n    externalizedToggle: Boolean(splitPanel),\n    contentClassName: clsx(styles.tools, testutilStyles.tools),\n    closeClassName: clsx(styles['tools-close'], testutilStyles['tools-close']),\n    toggleClassName: clsx(styles['tools-toggle'], testutilStyles['tools-toggle']),\n    topOffset: headerHeight,\n    bottomOffset: footerHeight,\n    ariaLabels: ariaLabels,\n    extendRight: 0,\n    hasDividerWithSplitPanel: splitPanelVisible\n  }, tools))));\n}","map":null,"metadata":{},"sourceType":"module"}