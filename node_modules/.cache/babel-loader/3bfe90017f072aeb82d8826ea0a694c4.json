{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useCallback, useState, useRef } from 'react';\nimport styles from './styles.css.js';\nimport InternalBox from '../../../box/internal';\nimport { InternalButton } from '../../../button/internal';\nimport InternalStatusIndicator from '../../../status-indicator/internal';\nimport InternalSpaceBetween from '../../../space-between/internal';\nimport { fireNonCancelableEvent } from '../../../internal/events/index.js';\nimport clsx from 'clsx';\nimport InternalAlert from '../../../alert/internal';\nimport InternalLink from '../../../link/internal';\nimport { useUniqueId } from '../../../internal/hooks/use-unique-id/index.js';\nimport { CSSTransition } from 'react-transition-group';\nimport InternalIcon from '../../../icon/internal';\nimport useFocusVisible from '../../../internal/hooks/focus-visible/index.js';\nimport { useVisualRefresh } from '../../../internal/hooks/use-visual-mode';\nimport { checkSafeUrl } from '../../../internal/utils/check-safe-url';\nexport default function TutorialList(_a) {\n  var i18nStrings = _a.i18nStrings,\n      tutorials = _a.tutorials,\n      _b = _a.loading,\n      loading = _b === void 0 ? false : _b,\n      onStartTutorial = _a.onStartTutorial,\n      downloadUrl = _a.downloadUrl;\n  checkSafeUrl('TutorialPanel', downloadUrl);\n  /*\n  // Filtering is not available in the Beta release.\n     const [searchTerm, setSearchTerm] = useState('');\n     const onSearchChangeCallback: InputProps['onChange'] = useCallback(event => setSearchTerm(event.detail.value), [\n    setSearchTerm\n  ]);\n     const filteredTutorials = tutorials.filter(tutorial => filteringFunction(tutorial, searchTerm))\n  */\n\n  var focusVisible = useFocusVisible();\n  var tutorialListRef = useRef(null);\n  var isRefresh = useVisualRefresh(tutorialListRef);\n  return React.createElement(React.Fragment, null, React.createElement(InternalSpaceBetween, {\n    size: \"s\"\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"m\"\n  }, React.createElement(InternalBox, {\n    variant: \"h2\",\n    fontSize: isRefresh ? 'heading-m' : 'heading-l',\n    padding: {\n      bottom: 'n'\n    }\n  }, i18nStrings.tutorialListTitle), React.createElement(InternalBox, {\n    variant: \"p\",\n    color: \"text-body-secondary\",\n    padding: \"n\"\n  }, i18nStrings.tutorialListDescription)), React.createElement(InternalSpaceBetween, {\n    size: \"l\"\n  }, React.createElement(\"a\", __assign({}, focusVisible, {\n    href: downloadUrl,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: styles['download-link']\n  }), React.createElement(InternalIcon, {\n    name: \"download\"\n  }), React.createElement(InternalBox, {\n    padding: {\n      left: 'xs'\n    },\n    color: \"inherit\",\n    fontWeight: \"bold\",\n    display: \"inline\"\n  }, i18nStrings.tutorialListDownloadLinkText)), loading ? React.createElement(InternalStatusIndicator, {\n    type: \"loading\"\n  }, i18nStrings.loadingText) : React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: styles['tutorial-list'],\n    role: \"list\",\n    ref: tutorialListRef\n  }, tutorials.map(function (tutorial, index) {\n    return React.createElement(Tutorial, {\n      tutorial: tutorial,\n      key: index,\n      onStartTutorial: onStartTutorial,\n      i18nStrings: i18nStrings\n    });\n  }))))));\n}\n\nfunction Tutorial(_a) {\n  var _b;\n\n  var tutorial = _a.tutorial,\n      onStartTutorialEventHandler = _a.onStartTutorial,\n      i18nStrings = _a.i18nStrings;\n  checkSafeUrl('TutorialPanel', tutorial.learnMoreUrl);\n  var controlId = useUniqueId();\n  var triggerControldId = useUniqueId();\n  var headerId = useUniqueId();\n  var tutorialRef = useRef(null);\n  var isRefresh = useVisualRefresh(tutorialRef);\n  var onStartTutorial = useCallback(function () {\n    fireNonCancelableEvent(onStartTutorialEventHandler, {\n      tutorial: tutorial\n    });\n  }, [onStartTutorialEventHandler, tutorial]);\n\n  var _c = useState(!tutorial.prerequisitesNeeded && !tutorial.completed),\n      expanded = _c[0],\n      setExpanded = _c[1];\n\n  var onClick = useCallback(function () {\n    setExpanded(function (expanded) {\n      return !expanded;\n    });\n  }, []);\n  return React.createElement(\"li\", {\n    className: styles['tutorial-box'],\n    role: \"listitem\",\n    ref: tutorialRef\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"xs\"\n  }, React.createElement(\"div\", {\n    className: styles['tutorial-box-title']\n  }, React.createElement(InternalBox, {\n    variant: \"h3\",\n    fontSize: isRefresh ? 'heading-s' : 'heading-m',\n    id: headerId,\n    margin: {\n      right: 'xs'\n    },\n    padding: \"n\",\n    className: styles.title\n  }, tutorial.title), React.createElement(\"div\", {\n    className: styles['button-wrapper']\n  }, React.createElement(InternalButton, {\n    id: triggerControldId,\n    variant: \"icon\",\n    ariaExpanded: expanded,\n    __nativeAttributes: {\n      'aria-controls': controlId,\n      'aria-labelledby': headerId\n    },\n    formAction: \"none\",\n    onClick: onClick,\n    className: expanded ? styles['collapse-button'] : styles['expand-button'],\n    iconName: expanded ? 'angle-up' : 'angle-down'\n  }))), tutorial.completed ? React.createElement(InternalStatusIndicator, {\n    __size: \"inherit\",\n    type: \"success\",\n    className: styles.completed,\n    wrapText: true\n  }, i18nStrings.tutorialCompletedText) : null), React.createElement(\"div\", {\n    \"aria-live\": \"polite\"\n  }, React.createElement(CSSTransition, {\n    \"in\": expanded,\n    timeout: 30,\n    classNames: {\n      enter: styles['content-enter']\n    }\n  }, React.createElement(\"div\", {\n    className: clsx(styles['expandable-section'], expanded && styles.expanded),\n    id: controlId\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"l\"\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"m\"\n  }, tutorial.prerequisitesNeeded && tutorial.prerequisitesAlert && React.createElement(InternalAlert, {\n    type: \"info\",\n    className: styles['prerequisites-alert']\n  }, tutorial.prerequisitesAlert), React.createElement(InternalSpaceBetween, {\n    size: \"s\"\n  }, React.createElement(InternalBox, {\n    color: \"text-body-secondary\"\n  }, React.createElement(\"div\", {\n    className: clsx(styles['tutorial-description'], typeof tutorial.description === 'string' && styles['tutorial-description-plaintext'])\n  }, tutorial.description)), tutorial.learnMoreUrl && React.createElement(InternalLink, {\n    href: tutorial.learnMoreUrl,\n    className: styles['learn-more-link'],\n    externalIconAriaLabel: i18nStrings.labelLearnMoreExternalIcon,\n    external: true\n  }, i18nStrings.learnMoreLinkText))), React.createElement(InternalBox, {\n    margin: {\n      bottom: 'xxs'\n    }\n  }, React.createElement(InternalButton, {\n    onClick: onStartTutorial,\n    disabled: (_b = tutorial.prerequisitesNeeded) !== null && _b !== void 0 ? _b : false,\n    formAction: \"none\",\n    className: styles.start\n  }, tutorial.completed ? i18nStrings.restartTutorialButtonText : i18nStrings.startTutorialButtonText)))))));\n}","map":null,"metadata":{},"sourceType":"module"}