{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport styles from './styles.css.js';\nimport { TokenEditor } from './token-editor';\nimport { getPropertyByKey } from './controller';\nimport FilteringToken from '../internal/components/filtering-token';\nexport var Token = function Token(_a) {\n  var token = _a.token,\n      _b = _a.operation,\n      operation = _b === void 0 ? 'and' : _b,\n      first = _a.first,\n      removeToken = _a.removeToken,\n      setToken = _a.setToken,\n      setOperation = _a.setOperation,\n      filteringOptions = _a.filteringOptions,\n      filteringProperties = _a.filteringProperties,\n      asyncProps = _a.asyncProps,\n      onLoadItems = _a.onLoadItems,\n      i18nStrings = _a.i18nStrings,\n      asyncProperties = _a.asyncProperties,\n      hideOperations = _a.hideOperations,\n      customGroupsText = _a.customGroupsText,\n      disabled = _a.disabled,\n      disableFreeTextFiltering = _a.disableFreeTextFiltering,\n      expandToViewport = _a.expandToViewport;\n  var property = token.propertyKey && getPropertyByKey(filteringProperties, token.propertyKey);\n  var propertyLabel = property && property.propertyLabel;\n  return React.createElement(FilteringToken, {\n    showOperation: !first && !hideOperations,\n    operation: operation,\n    andText: i18nStrings.operationAndText,\n    orText: i18nStrings.operationOrText,\n    dismissAriaLabel: i18nStrings.removeTokenButtonAriaLabel(token),\n    onChange: setOperation,\n    onDismiss: removeToken,\n    disabled: disabled\n  }, React.createElement(TokenEditor, {\n    setToken: setToken,\n    triggerComponent: React.createElement(\"span\", {\n      className: styles['token-trigger']\n    }, React.createElement(TokenTrigger, {\n      property: propertyLabel,\n      operator: token.operator,\n      value: token.value\n    })),\n    filteringOptions: filteringOptions,\n    filteringProperties: filteringProperties,\n    token: token,\n    asyncProps: asyncProps,\n    onLoadItems: onLoadItems,\n    i18nStrings: i18nStrings,\n    asyncProperties: asyncProperties,\n    customGroupsText: customGroupsText,\n    disableFreeTextFiltering: disableFreeTextFiltering,\n    expandToViewport: expandToViewport\n  }));\n};\n\nvar TokenTrigger = function TokenTrigger(_a) {\n  var property = _a.property,\n      operator = _a.operator,\n      value = _a.value;\n\n  if (property) {\n    property += ' ';\n  }\n\n  var freeTextContainsToken = operator === ':' && !property;\n  var operatorText = freeTextContainsToken ? '' : operator + ' ';\n  return React.createElement(React.Fragment, null, property, React.createElement(\"span\", {\n    className: styles['token-operator']\n  }, operatorText), value);\n};","map":null,"metadata":{},"sourceType":"module"}