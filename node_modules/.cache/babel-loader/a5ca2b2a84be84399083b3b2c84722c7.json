{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { addDays } from './add-days';\nimport { setDate } from './set-date';\nvar DAYS_IN_WEEK = 7;\nexport var getCalendarMonth = function getCalendarMonth(date, options) {\n  var _firstDayOfWeek$optio = _objectSpread({\n    firstDayOfWeek: 1\n  }, options),\n      firstDayOfWeek = _firstDayOfWeek$optio.firstDayOfWeek;\n\n  var firstDateOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\n  var lastDateOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  var firstWeekdayOfMonth = firstDateOfMonth.getDay();\n  var lastWeekdayOfMonth = lastDateOfMonth.getDay();\n  var daysInMonth = lastDateOfMonth.getDate();\n  var daysToPrepend = (firstWeekdayOfMonth - firstDayOfWeek + DAYS_IN_WEEK) % DAYS_IN_WEEK;\n  var daysToAppend = (DAYS_IN_WEEK - 1 - lastWeekdayOfMonth + firstDayOfWeek) % DAYS_IN_WEEK;\n  var month = [];\n  var week = [];\n\n  for (var i = 1 - daysToPrepend; i <= daysInMonth + daysToAppend + 1; i++) {\n    if (i <= 0) {\n      week.push(addDays(firstDateOfMonth, i - 1));\n    } else if (i > daysInMonth) {\n      week.push(addDays(lastDateOfMonth, i - daysInMonth));\n    } else {\n      week.push(setDate(date, i));\n    }\n\n    if (week.length === 7) {\n      month.push(week);\n      week = [];\n    }\n  }\n\n  return month;\n};","map":null,"metadata":{},"sourceType":"module"}