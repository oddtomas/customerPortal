{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalIcon from '../icon/internal';\nimport styles from './styles.css.js';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nexport var Segment = React.forwardRef(function (_a, ref) {\n  var _b, _c;\n\n  var disabled = _a.disabled,\n      text = _a.text,\n      iconName = _a.iconName,\n      iconAlt = _a.iconAlt,\n      iconUrl = _a.iconUrl,\n      iconSvg = _a.iconSvg,\n      isActive = _a.isActive,\n      onClick = _a.onClick,\n      onKeyDown = _a.onKeyDown,\n      tabIndex = _a.tabIndex;\n  var focusVisible = useFocusVisible();\n  return React.createElement(\"button\", __assign({\n    className: clsx(styles.segment, (_b = {}, _b[styles.disabled] = !!disabled, _b), (_c = {}, _c[styles.selected] = isActive, _c))\n  }, focusVisible, {\n    ref: ref,\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    disabled: disabled,\n    type: \"button\",\n    tabIndex: tabIndex,\n    \"aria-pressed\": isActive ? 'true' : 'false',\n    \"aria-label\": !text ? iconAlt : undefined\n  }), (iconName || iconUrl || iconSvg) && React.createElement(InternalIcon, {\n    className: clsx(styles.icon, text ? styles['with-text'] : styles['with-no-text']),\n    name: iconName,\n    url: iconUrl,\n    svg: iconSvg,\n    alt: iconAlt,\n    variant: disabled ? 'disabled' : 'normal'\n  }), React.createElement(\"span\", null, text));\n});","map":null,"metadata":{},"sourceType":"module"}