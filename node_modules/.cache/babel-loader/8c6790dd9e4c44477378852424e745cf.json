{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport ChartPopover from '../internal/components/chart-popover';\nimport ChartSeriesDetails from '../internal/components/chart-series-details';\nimport styles from './styles.css.js';\nimport { Transition } from '../internal/components/transition';\nexport default function MixedChartPopover(_a) {\n  var containerRef = _a.containerRef,\n      trackRef = _a.trackRef,\n      isOpen = _a.isOpen,\n      isPinned = _a.isPinned,\n      highlightDetails = _a.highlightDetails,\n      onDismiss = _a.onDismiss,\n      _b = _a.size,\n      size = _b === void 0 ? 'medium' : _b,\n      dismissAriaLabel = _a.dismissAriaLabel;\n  return React.createElement(Transition, {\n    \"in\": isOpen\n  }, function (state, ref) {\n    return React.createElement(\"div\", {\n      ref: ref,\n      className: clsx(state === 'exiting' && styles.exiting)\n    }, (isOpen || state !== 'exited') && highlightDetails && React.createElement(ChartPopover, {\n      title: highlightDetails.position,\n      trackRef: trackRef,\n      trackKey: highlightDetails.position,\n      dismissButton: isPinned,\n      dismissAriaLabel: dismissAriaLabel,\n      onDismiss: onDismiss,\n      container: containerRef.current,\n      size: size\n    }, React.createElement(ChartSeriesDetails, {\n      details: highlightDetails.details\n    })));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}