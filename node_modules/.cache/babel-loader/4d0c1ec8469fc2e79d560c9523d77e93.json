{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport InternalCheckbox from '../checkbox/internal';\nimport InternalColumnLayout from '../column-layout/internal';\nimport InternalFormField from '../form-field/internal';\nimport InternalRadioGroup from '../radio-group/internal';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport styles from './styles.css.js';\nexport var copyPreferences = function copyPreferences(_a) {\n  var pageSize = _a.pageSize,\n      wrapLines = _a.wrapLines,\n      visibleContent = _a.visibleContent,\n      custom = _a.custom;\n  return {\n    pageSize: pageSize,\n    wrapLines: wrapLines,\n    visibleContent: visibleContent,\n    custom: custom\n  };\n};\nexport var mergePreferences = function mergePreferences(newPref, oldPref) {\n  return {\n    pageSize: newPref.pageSize !== undefined ? newPref.pageSize : oldPref.pageSize,\n    wrapLines: newPref.wrapLines !== undefined ? newPref.wrapLines : oldPref.wrapLines,\n    visibleContent: newPref.visibleContent !== undefined ? newPref.visibleContent : oldPref.visibleContent,\n    custom: newPref.custom !== undefined ? newPref.custom : oldPref.custom\n  };\n};\nexport var ModalContentLayout = function ModalContentLayout(_a) {\n  var left = _a.left,\n      right = _a.right;\n\n  var _b = useContainerBreakpoints(['xs']),\n      breakpoint = _b[0],\n      ref = _b[1];\n\n  var smallContainer = breakpoint === 'default';\n\n  if (smallContainer) {\n    return React.createElement(\"div\", {\n      ref: ref\n    }, React.createElement(\"div\", null, left), right && React.createElement(\"div\", {\n      className: styles['second-column-small']\n    }, right));\n  }\n\n  var columns = right ? 2 : 1;\n  return React.createElement(\"div\", {\n    ref: ref\n  }, React.createElement(InternalColumnLayout, {\n    columns: columns,\n    variant: \"text-grid\"\n  }, React.createElement(\"div\", null, left), right && React.createElement(\"div\", null, right)));\n};\nexport var PageSizePreference = function PageSizePreference(_a) {\n  var title = _a.title,\n      options = _a.options,\n      value = _a.value,\n      _onChange = _a.onChange;\n  return React.createElement(\"div\", {\n    className: styles['page-size']\n  }, React.createElement(InternalFormField, {\n    label: title,\n    stretch: true,\n    className: styles['page-size-form-field']\n  }, React.createElement(InternalRadioGroup, {\n    className: styles['page-size-radio-group'],\n    value: \"\".concat(value),\n    items: options.map(function (_a) {\n      var label = _a.label,\n          value = _a.value;\n      return {\n        label: label,\n        value: \"\".concat(value)\n      };\n    }),\n    onChange: function onChange(_a) {\n      var detail = _a.detail;\n      return _onChange(parseInt(detail.value, 10));\n    }\n  })));\n};\nexport var WrapLinesPreference = function WrapLinesPreference(_a) {\n  var label = _a.label,\n      description = _a.description,\n      value = _a.value,\n      _onChange2 = _a.onChange;\n  return React.createElement(InternalCheckbox, {\n    checked: !!value,\n    description: description,\n    onChange: function onChange(_a) {\n      var detail = _a.detail;\n      return _onChange2(detail.checked);\n    },\n    className: styles['wrap-lines']\n  }, label);\n};\nexport var CustomPreference = function CustomPreference(_a) {\n  var value = _a.value,\n      customPreference = _a.customPreference,\n      onChange = _a.onChange;\n\n  var _b = useState(value),\n      customState = _b[0],\n      setCustomState = _b[1];\n\n  if (customPreference) {\n    return React.createElement(\"div\", {\n      className: styles.custom\n    }, customPreference(customState, function (value) {\n      // prevent value to be treated as a functional callback\n      setCustomState(function () {\n        return value;\n      });\n      onChange(value);\n    }));\n  }\n\n  return null;\n};","map":null,"metadata":{},"sourceType":"module"}