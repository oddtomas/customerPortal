{"ast":null,"code":"function makeSlotId(prop, formFieldId, propName) {\n  if (!prop) {\n    return undefined;\n  }\n\n  return \"\".concat(formFieldId, \"-\").concat(propName);\n}\n\nexport function getSlotIds(formFieldId, label, description, constraintText, errorText) {\n  var ids = {\n    label: makeSlotId(label, formFieldId, 'label'),\n    description: makeSlotId(description, formFieldId, 'description'),\n    constraint: makeSlotId(constraintText, formFieldId, 'constraint'),\n    error: makeSlotId(errorText, formFieldId, 'error')\n  };\n  return ids;\n}\nexport function getAriaDescribedBy(_a) {\n  var error = _a.error,\n      description = _a.description,\n      constraint = _a.constraint;\n  var describedByAttributes = [error, description, constraint].filter(function (e) {\n    return !!e;\n  });\n  var describedBy = describedByAttributes.length ? describedByAttributes.join(' ') : undefined;\n  return describedBy;\n}\nexport function getGridDefinition(stretch, secondaryControlPresent, isRefresh) {\n  var columns;\n\n  if (stretch) {\n    columns = [{\n      colspan: 12\n    }, {\n      colspan: 12\n    }];\n  } else if (isRefresh) {\n    columns = [{\n      colspan: {\n        \"default\": 12,\n        xs: 8\n      }\n    }, {\n      colspan: {\n        \"default\": 12,\n        xs: 4\n      }\n    }];\n  } else {\n    columns = [{\n      colspan: {\n        \"default\": 12,\n        xs: 9\n      }\n    }, {\n      colspan: {\n        \"default\": 12,\n        xs: 3\n      }\n    }];\n  }\n\n  if (!secondaryControlPresent) {\n    return [columns[0]];\n  }\n\n  return columns;\n}","map":null,"metadata":{},"sourceType":"module"}