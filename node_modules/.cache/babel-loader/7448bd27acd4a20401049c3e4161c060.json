{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React, { useEffect, useRef } from 'react';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { getBaseProps } from '../internal/base-component';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport styles from './styles.css.js';\nimport CheckboxIcon from '../internal/components/checkbox-icon';\nvar InternalCheckbox = React.forwardRef(function (_a, ref) {\n  var controlId = _a.controlId,\n      name = _a.name,\n      checked = _a.checked,\n      disabled = _a.disabled,\n      indeterminate = _a.indeterminate,\n      children = _a.children,\n      description = _a.description,\n      ariaLabel = _a.ariaLabel,\n      ariaLabelledby = _a.ariaLabelledby,\n      ariaDescribedby = _a.ariaDescribedby,\n      onFocus = _a.onFocus,\n      onBlur = _a.onBlur,\n      onChange = _a.onChange,\n      withoutLabel = _a.withoutLabel,\n      tabIndex = _a.tabIndex,\n      __internalRootRef = _a.__internalRootRef,\n      rest = __rest(_a, [\"controlId\", \"name\", \"checked\", \"disabled\", \"indeterminate\", \"children\", \"description\", \"ariaLabel\", \"ariaLabelledby\", \"ariaDescribedby\", \"onFocus\", \"onBlur\", \"onChange\", \"withoutLabel\", \"tabIndex\", \"__internalRootRef\"]);\n\n  var baseProps = getBaseProps(rest);\n  var checkboxRef = useRef(null);\n  useForwardFocus(ref, checkboxRef);\n  useEffect(function () {\n    if (checkboxRef.current) {\n      checkboxRef.current.indeterminate = Boolean(indeterminate);\n    }\n  });\n  return React.createElement(AbstractSwitch, __assign({}, baseProps, {\n    className: clsx(styles.root, baseProps.className),\n    controlClassName: styles['checkbox-control'],\n    controlId: controlId,\n    disabled: disabled,\n    label: children,\n    description: description,\n    descriptionBottomPadding: true,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescribedby: ariaDescribedby,\n    nativeControl: function nativeControl(nativeControlProps) {\n      return React.createElement(\"input\", __assign({}, nativeControlProps, {\n        ref: checkboxRef,\n        className: styles.input,\n        type: \"checkbox\",\n        checked: checked,\n        name: name,\n        tabIndex: tabIndex,\n        onFocus: onFocus && function () {\n          return fireNonCancelableEvent(onFocus);\n        },\n        onBlur: onBlur && function () {\n          return fireNonCancelableEvent(onBlur);\n        },\n        // empty handler to suppress React controllability warning\n        onChange: function onChange() {},\n        onClick: // Using onClick because onChange does not fire in indeterminate state in Internet Explorer and Legacy Edge\n        // https://stackoverflow.com/questions/33523130/ie-does-not-fire-change-event-on-indeterminate-checkbox-when-you-click-on-it\n        onChange && function () {\n          return fireNonCancelableEvent(onChange, // for deterministic transitions \"indeterminate\" -> \"checked\" -> \"unchecked\"\n          indeterminate ? {\n            checked: true,\n            indeterminate: false\n          } : {\n            checked: !checked,\n            indeterminate: false\n          });\n        }\n      }));\n    },\n    styledControl: React.createElement(CheckboxIcon, {\n      checked: checked,\n      indeterminate: indeterminate,\n      disabled: disabled\n    }),\n    withoutLabel: withoutLabel,\n    __internalRootRef: __internalRootRef\n  }));\n});\nexport default InternalCheckbox;","map":null,"metadata":{},"sourceType":"module"}