{"ast":null,"code":"import { __spreadArray } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport InternalBox from '../../box/internal';\nimport InternalFormField from '../../form-field/internal';\nimport InternalInput from '../../input/internal';\nimport InternalRadioGroup from '../../radio-group/internal';\nimport InternalSelect from '../../select/internal';\nimport InternalSpaceBetween from '../../space-between/internal';\nimport styles from './styles.css.js';\nvar dayUnits = ['day', 'week', 'month', 'year'];\n\nvar units = __spreadArray(['second', 'minute', 'hour'], dayUnits, true);\n\nvar CUSTOM_OPTION_SELECT_KEY = 'awsui-internal-custom-duration-key';\nexport default forwardRef(RelativeRangePicker);\n\nfunction RelativeRangePicker(_a, ref) {\n  var _b, _c;\n\n  var _d;\n\n  var dateOnly = _a.dateOnly,\n      _e = _a.options,\n      clientOptions = _e === void 0 ? [] : _e,\n      initialRange = _a.initialSelection,\n      onChangeRangeSize = _a.onChange,\n      i18nStrings = _a.i18nStrings,\n      isSingleGrid = _a.isSingleGrid;\n  var radioOptions = clientOptions.map(function (option) {\n    return {\n      value: option.key,\n      label: i18nStrings.formatRelativeRange(option)\n    };\n  });\n  radioOptions.push({\n    value: CUSTOM_OPTION_SELECT_KEY,\n    label: i18nStrings.customRelativeRangeOptionLabel,\n    description: i18nStrings.customRelativeRangeOptionDescription\n  });\n\n  var _f = useState(function () {\n    var _a;\n\n    if (initialRange && !initialRange.key) {\n      return CUSTOM_OPTION_SELECT_KEY;\n    }\n\n    return (_a = initialRange === null || initialRange === void 0 ? void 0 : initialRange.key) !== null && _a !== void 0 ? _a : null;\n  }),\n      selectedRadio = _f[0],\n      setSelectedRadio = _f[1];\n\n  var _g = useState(function () {\n    if (initialRange) {\n      return initialRange.amount;\n    } // NaN represents an empty duration\n\n\n    return NaN;\n  }),\n      customDuration = _g[0],\n      setCustomDuration = _g[1];\n\n  var initialCustomTimeUnit = dateOnly ? 'day' : 'minute';\n\n  var _h = useState((_d = initialRange === null || initialRange === void 0 ? void 0 : initialRange.unit) !== null && _d !== void 0 ? _d : initialCustomTimeUnit),\n      customUnitOfTime = _h[0],\n      setCustomUnitOfTime = _h[1];\n\n  var showRadioControl = clientOptions.length > 0;\n  var showCustomControls = clientOptions.length === 0 || selectedRadio === CUSTOM_OPTION_SELECT_KEY;\n  var elementRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        var _a;\n\n        if (elementRef.current) {\n          (_a = elementRef.current.querySelector('input')) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n      }\n    };\n  });\n  return React.createElement(\"div\", {\n    ref: elementRef\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"xs\",\n    direction: \"vertical\"\n  }, showRadioControl && React.createElement(InternalFormField, {\n    label: i18nStrings.relativeRangeSelectionHeading\n  }, React.createElement(InternalRadioGroup, {\n    className: styles['relative-range-radio-group'],\n    onChange: function onChange(_a) {\n      var detail = _a.detail;\n      setSelectedRadio(detail.value);\n\n      if (detail.value === CUSTOM_OPTION_SELECT_KEY) {\n        setCustomDuration(NaN);\n        setCustomUnitOfTime(initialCustomTimeUnit);\n        onChangeRangeSize({\n          amount: NaN,\n          unit: initialCustomTimeUnit,\n          type: 'relative'\n        });\n      } else {\n        var option = clientOptions.filter(function (o) {\n          return o.key === detail.value;\n        })[0];\n        onChangeRangeSize(option);\n      }\n    },\n    value: selectedRadio,\n    items: radioOptions\n  })), showCustomControls && React.createElement(InternalSpaceBetween, {\n    direction: \"vertical\",\n    size: \"xs\"\n  }, !showRadioControl && React.createElement(InternalBox, {\n    fontSize: \"body-m\",\n    color: \"text-body-secondary\"\n  }, i18nStrings.customRelativeRangeOptionDescription), React.createElement(\"div\", {\n    className: clsx(styles['custom-range'], (_b = {}, _b[styles['custom-range--no-padding']] = !showRadioControl, _b))\n  }, React.createElement(\"div\", {\n    className: clsx(styles['custom-range-form-controls'], (_c = {}, _c[styles.vertical] = isSingleGrid, _c))\n  }, React.createElement(\"div\", {\n    className: styles['custom-range-duration']\n  }, React.createElement(InternalFormField, {\n    label: i18nStrings.customRelativeRangeDurationLabel\n  }, React.createElement(InternalInput, {\n    type: \"number\",\n    className: styles['custom-range-duration-input'],\n    value: isNaN(customDuration) || customDuration === 0 ? '' : customDuration === null || customDuration === void 0 ? void 0 : customDuration.toString(),\n    onChange: function onChange(e) {\n      var amount = Number(e.detail.value);\n      setCustomDuration(amount);\n      onChangeRangeSize({\n        amount: amount,\n        unit: customUnitOfTime,\n        type: 'relative'\n      });\n    },\n    placeholder: i18nStrings.customRelativeRangeDurationPlaceholder\n  }))), React.createElement(\"div\", {\n    className: styles['custom-range-unit']\n  }, React.createElement(InternalFormField, {\n    label: i18nStrings.customRelativeRangeUnitLabel\n  }, React.createElement(InternalSelect, {\n    className: styles['custom-range-unit-select'],\n    selectedOption: {\n      value: customUnitOfTime,\n      label: i18nStrings.formatUnit(customUnitOfTime, customDuration)\n    },\n    onChange: function onChange(e) {\n      var unit = e.detail.selectedOption.value;\n      setCustomUnitOfTime(unit);\n      onChangeRangeSize({\n        amount: customDuration,\n        unit: unit,\n        type: 'relative'\n      });\n    },\n    options: (dateOnly ? dayUnits : units).map(function (unit) {\n      return {\n        value: unit,\n        label: i18nStrings.formatUnit(unit, customDuration)\n      };\n    }),\n    renderHighlightedAriaLive: function renderHighlightedAriaLive(option) {\n      return option.label || option.value || '';\n    }\n  }))))))));\n}","map":null,"metadata":{},"sourceType":"module"}