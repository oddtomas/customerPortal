{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React, { useContext, useLayoutEffect, useRef } from 'react';\nimport { AppLayoutContext } from '../app-layout/visual-refresh/context';\nimport { getBaseProps } from '../internal/base-component';\nimport { StickyHeaderContext, useStickyHeader } from './use-sticky-header';\nimport { useContainerQuery } from '../internal/hooks/container-queries';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nexport default function InternalContainer(_a) {\n  var _b, _c, _d;\n\n  var header = _a.header,\n      footer = _a.footer,\n      children = _a.children,\n      _e = _a.variant,\n      variant = _e === void 0 ? 'default' : _e,\n      _f = _a.disableHeaderPaddings,\n      disableHeaderPaddings = _f === void 0 ? false : _f,\n      _g = _a.disableContentPaddings,\n      disableContentPaddings = _g === void 0 ? false : _g,\n      __stickyOffset = _a.__stickyOffset,\n      _h = _a.__stickyHeader,\n      __stickyHeader = _h === void 0 ? false : _h,\n      _j = _a.__internalRootRef,\n      __internalRootRef = _j === void 0 ? null : _j,\n      _k = _a.__disableFooterDivider,\n      __disableFooterDivider = _k === void 0 ? false : _k,\n      _l = _a.__disableFooterPaddings,\n      __disableFooterPaddings = _l === void 0 ? false : _l,\n      __headerRef = _a.__headerRef,\n      restProps = __rest(_a, [\"header\", \"footer\", \"children\", \"variant\", \"disableHeaderPaddings\", \"disableContentPaddings\", \"__stickyOffset\", \"__stickyHeader\", \"__internalRootRef\", \"__disableFooterDivider\", \"__disableFooterPaddings\", \"__headerRef\"]);\n\n  var baseProps = getBaseProps(restProps);\n  var rootRef = useRef(null);\n  var headerRef = useRef(null);\n  var isRefresh = useVisualRefresh(rootRef);\n  var hasDynamicHeight = isRefresh && variant === 'full-page';\n\n  var _m = useStickyHeader(rootRef, headerRef, __stickyHeader, __stickyOffset),\n      isSticky = _m.isSticky,\n      isStuck = _m.isStuck,\n      stickyStyles = _m.stickyStyles;\n  /**\n   * Observe the dynamic height of the full page container variant in\n   * visual refresh and update the AppLayout dynamicOverlapHeight property.\n   */\n\n\n  var setDynamicOverlapHeight = useContext(AppLayoutContext).setDynamicOverlapHeight;\n\n  var _o = useContainerQuery(function (rect) {\n    return rect.height;\n  }),\n      overlapContainerQuery = _o[0],\n      overlapElement = _o[1];\n\n  useLayoutEffect(function handleDynamicOverlapHeight() {\n    if (hasDynamicHeight) {\n      setDynamicOverlapHeight(overlapContainerQuery !== null && overlapContainerQuery !== void 0 ? overlapContainerQuery : 0);\n    }\n  }, [hasDynamicHeight, overlapContainerQuery, setDynamicOverlapHeight]);\n  var mergedRef = useMergeRefs(rootRef, __internalRootRef);\n  var headerMergedRef = useMergeRefs(headerRef, overlapElement, __headerRef);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root, styles[\"variant-\".concat(variant)]),\n    ref: mergedRef\n  }), header && React.createElement(StickyHeaderContext.Provider, {\n    value: {\n      isStuck: isStuck\n    }\n  }, React.createElement(\"div\", __assign({\n    className: clsx(styles.header, styles[\"header-variant-\".concat(variant)], (_b = {}, _b[styles['header-sticky-disabled']] = __stickyHeader && !isSticky, _b[styles['header-sticky-enabled']] = isSticky, _b[styles['header-dynamic-height']] = hasDynamicHeight, _b[styles['header-stuck']] = isStuck, _b[styles['with-paddings']] = !disableHeaderPaddings, _b))\n  }, stickyStyles, {\n    ref: headerMergedRef\n  }), hasDynamicHeight ? React.createElement(\"div\", {\n    className: clsx(styles['dark-header'], 'awsui-context-content-header')\n  }, header) : header)), React.createElement(\"div\", {\n    className: clsx(styles.content, (_c = {}, _c[styles['with-paddings']] = !disableContentPaddings, _c))\n  }, children), footer && React.createElement(\"div\", {\n    className: clsx(styles.footer, (_d = {}, _d[styles['with-divider']] = !__disableFooterDivider, _d[styles['with-paddings']] = !__disableFooterPaddings, _d))\n  }, footer));\n}","map":null,"metadata":{},"sourceType":"module"}