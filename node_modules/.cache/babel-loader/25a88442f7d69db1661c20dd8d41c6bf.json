{"ast":null,"code":"import { useContainerQuery } from './use-container-query';\nimport { getMatchingBreakpoint } from '../../breakpoints';\n/**\n * Re-renders the component when the breakpoint for the component changes. Scopes the re-renders to the specific\n * breakpoints you want to break at. \"default\" is always included as a fallback, so [\"xs\"] would trigger for\n * \"default\" and \"xs\".\n *\n * @param triggers The relevant breakpoints to trigger for.\n */\n\nexport function useContainerBreakpoints(triggers) {\n  // triggers.join() gives us a stable value to use for the dependencies argument\n  var triggersDep = triggers === null || triggers === void 0 ? void 0 : triggers.join(); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  return useContainerQuery(function (rect) {\n    return getMatchingBreakpoint(rect.width, triggers);\n  }, [triggersDep]);\n}","map":null,"metadata":{},"sourceType":"module"}