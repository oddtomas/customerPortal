{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport { getColumnAriaLabel, compareDates } from './table-utils';\nimport { formatSize, formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { joinObjectPath } from '../utils';\nexport function VersionsTable(_a) {\n  var forwardFocusRef = _a.forwardFocusRef,\n      pathSegments = _a.pathSegments,\n      i18nStrings = _a.i18nStrings,\n      isVisualRefresh = _a.isVisualRefresh,\n      isItemDisabled = _a.isItemDisabled,\n      _fetchData = _a.fetchData,\n      visibleColumns = _a.visibleColumns,\n      _onSelect = _a.onSelect;\n  return React.createElement(BasicS3Table, {\n    forwardFocusRef: forwardFocusRef,\n    trackBy: \"VersionId\",\n    fetchData: function fetchData() {\n      var bucketName = pathSegments[0],\n          rest = pathSegments.slice(1);\n      return _fetchData(bucketName, joinObjectPath(rest));\n    },\n    i18nStrings: __assign(__assign({}, getSharedI18Strings(i18nStrings)), {\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersions,\n      filteringAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelFiltering(i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersions),\n      filteringPlaceholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersionsSearchPlaceholder,\n      loadingText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersionsLoading,\n      emptyText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersionsNoItems,\n      selectionLabels: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsVersionsSelection\n    }),\n    isVisualRefresh: isVisualRefresh,\n    visibleColumns: visibleColumns,\n    isItemDisabled: isItemDisabled,\n    columnDefinitions: [{\n      id: 'ID',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionID,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionID),\n      sortingField: 'VersionId',\n      cell: function cell(item) {\n        return item.VersionId;\n      },\n      minWidth: '250px'\n    }, {\n      id: 'LastModified',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionLastModified,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionLastModified),\n      sortingComparator: function sortingComparator(a, b) {\n        return compareDates(a.LastModified, b.LastModified);\n      },\n      cell: function cell(item) {\n        return formatDefault(item.LastModified);\n      }\n    }, {\n      id: 'Size',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionSize,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionSize),\n      sortingField: 'Size',\n      cell: function cell(item) {\n        return formatSize(item.Size);\n      }\n    }],\n    onSelect: function onSelect(item) {\n      var _a;\n\n      return _onSelect((_a = item === null || item === void 0 ? void 0 : item.VersionId) !== null && _a !== void 0 ? _a : '');\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}