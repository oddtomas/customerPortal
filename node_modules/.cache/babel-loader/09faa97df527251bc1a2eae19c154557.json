{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { warnOnce } from '../../../internal/logging';\n\nvar getHtmlElement = function getHtmlElement() {\n  return typeof document !== 'undefined' ? document.querySelector('html') : null;\n};\n\nfunction getBrowserLocale() {\n  return new Intl.DateTimeFormat().resolvedOptions().locale;\n}\n\nfunction checkLocale(component, locale) {\n  if (!locale || locale === '') {\n    return '';\n  } // Support underscore-delimited locales\n\n\n  locale = locale && locale.replace(/^([a-z]{2})_/, '$1-'); // Check that the value matches aa-BB pattern\n  // TODO: support full BCP 47 spec?\n\n  if (locale && !locale.match(/^[a-z]{2}(-[A-Z]{2})?$/)) {\n    warnOnce(component, \"Invalid locale provided: \".concat(locale, \". Falling back to default\"));\n    locale = '';\n  }\n\n  return locale;\n}\n\nexport function mergeLocales(locale, fullLocale) {\n  var isShort = locale.length === 2;\n\n  if (isShort && fullLocale.indexOf(locale) === 0) {\n    return fullLocale;\n  }\n\n  return locale;\n}\nexport function normalizeLocale(component, locale) {\n  var _a;\n\n  locale = checkLocale(component, locale);\n  var browserLocale = getBrowserLocale();\n\n  if (locale) {\n    return mergeLocales(locale, browserLocale);\n  }\n\n  var htmlLocale = checkLocale(component, (_a = getHtmlElement()) === null || _a === void 0 ? void 0 : _a.getAttribute('lang'));\n\n  if (htmlLocale) {\n    return mergeLocales(htmlLocale, browserLocale);\n  }\n\n  return browserLocale;\n}","map":null,"metadata":{},"sourceType":"module"}