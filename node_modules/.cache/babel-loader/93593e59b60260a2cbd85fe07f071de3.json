{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useContext, useEffect } from 'react';\nimport styles from './styles.css.js';\nimport { hotspotContext as hotspotContextType } from '../annotation-context/context';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nexport default function Hotspot(_a) {\n  var children = _a.children,\n      hotspotId = _a.hotspotId,\n      _b = _a.side,\n      side = _b === void 0 ? 'right' : _b,\n      _c = _a.direction,\n      direction = _c === void 0 ? 'top' : _c,\n      restProps = __rest(_a, [\"children\", \"hotspotId\", \"side\", \"direction\"]);\n\n  var __internalRootRef = useBaseComponent('Hotspot').__internalRootRef;\n\n  var baseProps = getBaseProps(restProps);\n  var hotspotContext = useContext(hotspotContextType);\n  var content = hotspotContext.getContentForId(hotspotId, direction);\n  var unregisterHotspot = hotspotContext.unregisterHotspot,\n      registerHotspot = hotspotContext.registerHotspot;\n  useEffect(function () {\n    registerHotspot(hotspotId);\n    return function () {\n      return unregisterHotspot(hotspotId);\n    };\n  }, [hotspotId, unregisterHotspot, registerHotspot]);\n\n  if (children) {\n    return React.createElement(\"div\", __assign({}, baseProps, {\n      className: clsx(baseProps.className, styles.root, styles.wrapper),\n      ref: __internalRootRef\n    }), React.createElement(\"div\", {\n      className: styles.elementWrapper\n    }, children), React.createElement(\"div\", {\n      className: clsx(styles.markerWrapper, styles[\"placement-\".concat(side)])\n    }, content));\n  }\n\n  return React.createElement(\"span\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root, styles.inlineWrapper),\n    ref: __internalRootRef\n  }), content);\n}\napplyDisplayName(Hotspot, 'Hotspot');","map":null,"metadata":{},"sourceType":"module"}