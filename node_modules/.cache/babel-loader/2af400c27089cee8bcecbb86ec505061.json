{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nvar InternalToggle = React.forwardRef(function (_a, ref) {\n  var _b, _c;\n\n  var controlId = _a.controlId,\n      checked = _a.checked,\n      name = _a.name,\n      disabled = _a.disabled,\n      children = _a.children,\n      description = _a.description,\n      ariaLabel = _a.ariaLabel,\n      ariaDescribedby = _a.ariaDescribedby,\n      ariaLabelledby = _a.ariaLabelledby,\n      onFocus = _a.onFocus,\n      onBlur = _a.onBlur,\n      onChange = _a.onChange,\n      _d = _a.__internalRootRef,\n      __internalRootRef = _d === void 0 ? null : _d,\n      rest = __rest(_a, [\"controlId\", \"checked\", \"name\", \"disabled\", \"children\", \"description\", \"ariaLabel\", \"ariaDescribedby\", \"ariaLabelledby\", \"onFocus\", \"onBlur\", \"onChange\", \"__internalRootRef\"]);\n\n  var baseProps = getBaseProps(rest);\n  var checkboxRef = useRef(null);\n  useForwardFocus(ref, checkboxRef);\n  return React.createElement(AbstractSwitch, __assign({}, baseProps, {\n    className: clsx(styles.root, baseProps.className),\n    controlClassName: clsx(styles['toggle-control'], (_b = {}, _b[styles['toggle-control-checked']] = checked, _b[styles['toggle-control-disabled']] = disabled, _b)),\n    controlId: controlId,\n    disabled: disabled,\n    label: children,\n    description: description,\n    descriptionBottomPadding: true,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescribedby: ariaDescribedby,\n    nativeControl: function nativeControl(nativeControlProps) {\n      return React.createElement(\"input\", __assign({}, nativeControlProps, {\n        ref: checkboxRef,\n        className: styles.input,\n        type: \"checkbox\",\n        checked: checked,\n        name: name,\n        onFocus: onFocus && function () {\n          return fireNonCancelableEvent(onFocus);\n        },\n        onBlur: onBlur && function () {\n          return fireNonCancelableEvent(onBlur);\n        },\n        onChange: onChange && function (event) {\n          return fireNonCancelableEvent(onChange, {\n            checked: event.target.checked\n          });\n        }\n      }));\n    },\n    styledControl: React.createElement(\"div\", {\n      className: clsx(styles['toggle-handle'], (_c = {}, _c[styles['toggle-handle-checked']] = checked, _c[styles['toggle-handle-disabled']] = disabled, _c))\n    }),\n    __internalRootRef: __internalRootRef\n  }));\n});\nexport default InternalToggle;","map":null,"metadata":{},"sourceType":"module"}