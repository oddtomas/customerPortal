{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport { InternalButton } from '../button/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport styles from './styles.css.js';\nimport Unmount from './unmount';\nexport default function WizardActions(_a) {\n  var cancelButtonText = _a.cancelButtonText,\n      onCancelClick = _a.onCancelClick,\n      isPrimaryLoading = _a.isPrimaryLoading,\n      primaryButtonText = _a.primaryButtonText,\n      onPrimaryClick = _a.onPrimaryClick,\n      showPrevious = _a.showPrevious,\n      previousButtonText = _a.previousButtonText,\n      onPreviousClick = _a.onPreviousClick,\n      showSkipTo = _a.showSkipTo,\n      skipToButtonText = _a.skipToButtonText,\n      onSkipToClick = _a.onSkipToClick;\n  var containerRef = useRef(null);\n  var primaryButtonRef = useRef(null);\n\n  var onPreviousUnmount = function onPreviousUnmount() {\n    var _a, _b;\n\n    if (((_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(\".\".concat(styles['previous-button']))) === document.activeElement) {\n      (_b = primaryButtonRef.current) === null || _b === void 0 ? void 0 : _b.focus();\n    }\n  };\n\n  var onSkipUnmount = function onSkipUnmount() {\n    var _a, _b;\n\n    if (((_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(\".\".concat(styles['skip-to-button']))) === document.activeElement) {\n      (_b = primaryButtonRef.current) === null || _b === void 0 ? void 0 : _b.focus();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    ref: containerRef\n  }, React.createElement(InternalSpaceBetween, {\n    direction: \"horizontal\",\n    size: \"xs\",\n    className: styles['action-buttons']\n  }, React.createElement(InternalButton, {\n    className: styles['cancel-button'],\n    variant: \"link\",\n    formAction: \"none\",\n    onClick: onCancelClick\n  }, cancelButtonText), showSkipTo && skipToButtonText && React.createElement(Unmount, {\n    onUnmount: onSkipUnmount\n  }, React.createElement(InternalButton, {\n    className: styles['skip-to-button'],\n    onClick: onSkipToClick,\n    formAction: \"none\",\n    disabled: isPrimaryLoading\n  }, skipToButtonText)), showPrevious && React.createElement(Unmount, {\n    onUnmount: onPreviousUnmount\n  }, React.createElement(InternalButton, {\n    className: styles['previous-button'],\n    onClick: onPreviousClick,\n    formAction: \"none\",\n    disabled: isPrimaryLoading\n  }, previousButtonText)), React.createElement(InternalButton, {\n    ref: primaryButtonRef,\n    className: styles['primary-button'],\n    variant: \"primary\",\n    formAction: \"none\",\n    onClick: onPrimaryClick,\n    loading: isPrimaryLoading\n  }, primaryButtonText)));\n}","map":null,"metadata":{},"sourceType":"module"}