{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useContext } from 'react';\nimport AppBar from './app-bar';\nimport { AppLayoutContext, AppLayoutProvider } from './context';\nimport Background from './background';\nimport Header from './header';\nimport Layout from './layout';\nimport Main from './main';\nimport Navigation from './navigation';\nimport Notifications from './notifications';\nimport SplitPanel from './split-panel';\nimport Tools from './tools';\n/**\n * In mobile viewports the AppBar position changes to sticky and is placed\n * above the notifications. This is handled by adjusting the row positions\n * in CSS for the AppBar and Notifications components relative to the grid\n * definition in the Layout component. In order to keep alignment between\n * the visual ordering and logical ordering of the document the logical order\n * of these components is also modified in the markup below.\n */\n\nvar AppLayoutWithRef = React.forwardRef(function AppLayout(props, ref) {\n  var isMobile = useContext(AppLayoutContext).isMobile;\n  return React.createElement(AppLayoutProvider, __assign({}, props, {\n    ref: ref\n  }), React.createElement(SplitPanel, null, React.createElement(Layout, null, React.createElement(Background, null), React.createElement(Navigation, null), isMobile && React.createElement(AppBar, null), React.createElement(Notifications, null), !isMobile && React.createElement(AppBar, null), React.createElement(Header, null), React.createElement(Main, null), React.createElement(SplitPanel.Bottom, null), React.createElement(Tools, null, React.createElement(SplitPanel.Side, null)))));\n});\nexport default AppLayoutWithRef;","map":null,"metadata":{},"sourceType":"module"}