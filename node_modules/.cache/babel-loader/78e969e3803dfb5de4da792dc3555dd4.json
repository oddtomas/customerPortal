{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React from 'react';\nimport InternalIcon from '../../icon/internal';\nimport useFocusVisible from '../../internal/hooks/focus-visible';\nimport { KeyCode } from '../../internal/keycode';\nimport { getAriaSort, getSortingIconName, getSortingStatus, isSorted } from './utils';\nimport styles from './styles.css.js';\nexport function TableHeaderCell(_a) {\n  var _b, _c, _d;\n\n  var className = _a.className,\n      style = _a.style,\n      tabIndex = _a.tabIndex,\n      column = _a.column,\n      activeSortingColumn = _a.activeSortingColumn,\n      sortingDescending = _a.sortingDescending,\n      sortingDisabled = _a.sortingDisabled,\n      wrapLines = _a.wrapLines,\n      resizer = _a.resizer,\n      showFocusRing = _a.showFocusRing,\n      onClick = _a.onClick,\n      onFocus = _a.onFocus,\n      onBlur = _a.onBlur;\n  var focusVisible = useFocusVisible();\n  var sortable = !!column.sortingComparator || !!column.sortingField;\n  var sorted = !!activeSortingColumn && isSorted(column, activeSortingColumn);\n  var sortingStatus = getSortingStatus(sortable, sorted, !!sortingDescending, !!sortingDisabled);\n\n  var handleClick = function handleClick() {\n    return onClick({\n      sortingColumn: column,\n      isDescending: sorted ? !sortingDescending : false\n    });\n  }; // Elements with role=\"button\" do not have the default behavior of <button>, where pressing\n  // Enter or Space will trigger a click event. Therefore we need to add this ourselves.\n  // The native <button> element cannot be used due to a misaligned implementation in Firefox:\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=843003\n\n\n  var handleKeyPress = function handleKeyPress(_a) {\n    var e = _a.nativeEvent;\n\n    if (e.keyCode === KeyCode.enter || e.keyCode === KeyCode.space) {\n      e.preventDefault();\n      handleClick();\n    }\n  };\n\n  return React.createElement(\"th\", {\n    className: clsx(className, (_b = {}, _b[styles['header-cell-sortable']] = sortingStatus, _b[styles['header-cell-sorted']] = sortingStatus === 'ascending' || sortingStatus === 'descending', _b[styles['header-cell-disabled']] = sortingDisabled, _b[styles['header-cell-ascending']] = sortingStatus === 'ascending', _b[styles['header-cell-descending']] = sortingStatus === 'descending', _b)),\n    \"aria-sort\": sortingStatus && getAriaSort(sortingStatus),\n    style: style\n  }, React.createElement(\"div\", __assign({\n    className: clsx(styles['header-cell-content'], (_c = {}, _c[styles['header-cell-fake-focus']] = showFocusRing && focusVisible['data-awsui-focus-visible'], _c)),\n    \"aria-label\": column.ariaLabel ? column.ariaLabel({\n      sorted: sorted,\n      descending: sorted && !!sortingDescending,\n      disabled: !!sortingDisabled\n    }) : undefined\n  }, sortingDisabled || !sortingStatus ? (_d = {}, _d['aria-disabled'] = 'true', _d) : __assign(__assign({\n    onKeyPress: handleKeyPress,\n    tabIndex: tabIndex,\n    role: 'button'\n  }, focusVisible), {\n    onClick: handleClick,\n    onFocus: onFocus,\n    onBlur: onBlur\n  })), React.createElement(\"div\", {\n    className: clsx(styles['header-cell-text'], wrapLines && styles['header-cell-text-wrap'])\n  }, column.header), sortingStatus && React.createElement(\"span\", {\n    className: styles['sorting-icon']\n  }, React.createElement(InternalIcon, {\n    name: getSortingIconName(sortingStatus)\n  }))), resizer);\n}","map":null,"metadata":{},"sourceType":"module"}