{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getOverflowParents } from '../internal/utils/scrollable-containers';\n/**\n * @param containerRef ref to surrounding container with sticky element\n * @param stickyRef ref to sticky element scrolled inside of containerRef\n * @param containerOffset offset between header and container\n *                        originating borders or paddings\n */\n\nexport default function stickyScrolling(containerRef, stickyRef) {\n  var scrollToTop = function scrollToTop() {\n    if (!containerRef.current || !stickyRef.current) {\n      return;\n    }\n\n    var scrollingOffset = calculateScrollingOffset(containerRef.current, stickyRef.current);\n\n    if (scrollingOffset > 0) {\n      scrollUpBy(scrollingOffset, containerRef.current);\n    }\n  };\n\n  var scrollToItem = function scrollToItem(item) {\n    if (!item || !containerRef.current || !stickyRef.current) {\n      return;\n    }\n\n    var stickyBottom = stickyRef.current.getBoundingClientRect().bottom;\n    var scrollingOffset = stickyBottom - item.getBoundingClientRect().top;\n\n    if (scrollingOffset > 0) {\n      scrollUpBy(scrollingOffset, containerRef.current);\n    }\n  };\n\n  return {\n    scrollToTop: scrollToTop,\n    scrollToItem: scrollToItem\n  };\n}\n/**\n * Calculates the scrolling offset between container and\n * sticky element with container offset caused by border\n * or padding\n * @param container\n * @param sticky element inside of container\n * @param containerOffset caused by borders or paddings\n */\n\nexport function calculateScrollingOffset(container, sticky) {\n  var stickyRect = sticky.getBoundingClientRect();\n  var containerRect = container.getBoundingClientRect();\n  return stickyRect.top - containerRect.top;\n}\n/**\n * Scrolls suitable parent of container up by amount of pixels\n * @param amount pixels to be scrolled up\n * @param container used to determine next parent element for scrolling\n */\n\nexport function scrollUpBy(amount, container) {\n  var parent = getOverflowParents(container);\n\n  if (parent.length) {\n    // Take next overflow parent in stack\n    parent[0].scrollTop -= amount;\n  } else {\n    window.scrollTo({\n      top: window.pageYOffset - amount\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module"}