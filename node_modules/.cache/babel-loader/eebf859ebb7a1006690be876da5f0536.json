{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport styles from './styles.css.js';\nimport Option from '../../internal/components/option';\nimport SelectableItem from '../../internal/components/selectable-item';\nimport { getBaseProps } from '../../internal/base-component';\nimport CheckboxIcon from '../../internal/components/checkbox-icon';\n\nvar Item = function Item(_a, ref) {\n  var option = _a.option,\n      highlighted = _a.highlighted,\n      selected = _a.selected,\n      filteringValue = _a.filteringValue,\n      hasCheckbox = _a.hasCheckbox,\n      isKeyboard = _a.isKeyboard,\n      virtualPosition = _a.virtualPosition,\n      padBottom = _a.padBottom,\n      isNextSelected = _a.isNextSelected,\n      screenReaderContent = _a.screenReaderContent,\n      ariaPosinset = _a.ariaPosinset,\n      ariaSetsize = _a.ariaSetsize,\n      restProps = __rest(_a, [\"option\", \"highlighted\", \"selected\", \"filteringValue\", \"hasCheckbox\", \"isKeyboard\", \"virtualPosition\", \"padBottom\", \"isNextSelected\", \"screenReaderContent\", \"ariaPosinset\", \"ariaSetsize\"]);\n\n  var baseProps = getBaseProps(restProps);\n  var isParent = option.type === 'parent';\n  var isChild = option.type === 'child';\n  var wrappedOption = option.option;\n  var disabled = option.disabled || wrappedOption.disabled;\n  return React.createElement(SelectableItem, __assign({\n    ariaSelected: selected,\n    selected: selected,\n    isNextSelected: isNextSelected,\n    highlighted: highlighted,\n    disabled: option.disabled,\n    isParent: isParent,\n    isChild: isChild,\n    isKeyboard: isKeyboard,\n    ref: ref,\n    virtualPosition: virtualPosition,\n    padBottom: padBottom,\n    screenReaderContent: screenReaderContent,\n    ariaPosinset: ariaPosinset,\n    ariaSetsize: ariaSetsize\n  }, baseProps), React.createElement(\"div\", {\n    className: styles.item\n  }, hasCheckbox && !isParent && React.createElement(\"div\", {\n    className: styles.checkbox\n  }, React.createElement(CheckboxIcon, {\n    checked: selected || false,\n    disabled: option.disabled\n  })), isParent ? wrappedOption.label || wrappedOption.value : React.createElement(Option, {\n    option: __assign(__assign({}, wrappedOption), {\n      disabled: disabled\n    }),\n    highlightText: filteringValue\n  })));\n};\n\nexport default React.memo(React.forwardRef(Item));","map":null,"metadata":{},"sourceType":"module"}