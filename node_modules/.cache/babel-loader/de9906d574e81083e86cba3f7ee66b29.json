{"ast":null,"code":"import { __spreadArray } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useState } from 'react';\nimport InternalBox from '../box/internal';\nimport { InternalButton } from '../button/internal';\nimport InternalCheckbox from '../checkbox/internal';\nimport InternalColumnLayout from '../column-layout/internal';\nimport InternalFormField from '../form-field/internal';\nimport InternalModal from '../modal/internal';\nimport InternalSelect from '../select/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { FormFieldContext } from '../internal/context/form-field-context';\nimport { LightThemes, DarkThemes } from './ace-themes';\nexport default (function (props) {\n  var _a, _b, _c, _d;\n\n  var _e = useState((_b = (_a = props.preferences) === null || _a === void 0 ? void 0 : _a.wrapLines) !== null && _b !== void 0 ? _b : true),\n      wrapLines = _e[0],\n      setWrapLines = _e[1];\n\n  var _f = useState((_d = (_c = props.preferences) === null || _c === void 0 ? void 0 : _c.theme) !== null && _d !== void 0 ? _d : props.defaultTheme),\n      theme = _f[0],\n      setTheme = _f[1];\n\n  var _g = useState(function () {\n    return __spreadArray(__spreadArray([], LightThemes, true), DarkThemes, true).filter(function (t) {\n      return t.value === theme;\n    })[0];\n  }),\n      selectedThemeOption = _g[0],\n      setSelectedThemeOption = _g[1];\n\n  var onThemeSelected = function onThemeSelected(e) {\n    setTheme(e.detail.selectedOption.value);\n    setSelectedThemeOption(e.detail.selectedOption);\n  };\n\n  return React.createElement(FormFieldContext.Provider, {\n    value: {}\n  }, React.createElement(InternalModal, {\n    size: \"medium\",\n    visible: true,\n    onDismiss: props.onDismiss,\n    header: props.i18nStrings.header,\n    closeAriaLabel: props.i18nStrings.cancel,\n    footer: React.createElement(InternalBox, {\n      float: \"right\"\n    }, React.createElement(InternalSpaceBetween, {\n      direction: \"horizontal\",\n      size: \"xs\"\n    }, React.createElement(InternalButton, {\n      onClick: props.onDismiss\n    }, props.i18nStrings.cancel), React.createElement(InternalButton, {\n      onClick: function onClick() {\n        return props.onConfirm({\n          wrapLines: wrapLines,\n          theme: theme\n        });\n      },\n      variant: \"primary\"\n    }, props.i18nStrings.confirm)))\n  }, React.createElement(InternalColumnLayout, {\n    columns: 2,\n    variant: \"text-grid\"\n  }, React.createElement(\"div\", null, React.createElement(InternalCheckbox, {\n    checked: wrapLines,\n    onChange: function onChange(e) {\n      return setWrapLines(e.detail.checked);\n    }\n  }, props.i18nStrings.wrapLines)), React.createElement(\"div\", null, React.createElement(InternalFormField, {\n    label: props.i18nStrings.theme\n  }, React.createElement(InternalSelect, {\n    selectedOption: selectedThemeOption,\n    onChange: onThemeSelected,\n    options: [{\n      label: props.i18nStrings.lightThemes,\n      options: LightThemes\n    }, {\n      label: props.i18nStrings.darkThemes,\n      options: DarkThemes\n    }],\n    filteringType: \"auto\"\n  }))))));\n});","map":null,"metadata":{},"sourceType":"module"}