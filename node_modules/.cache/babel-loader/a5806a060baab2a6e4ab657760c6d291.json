{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalBox from '../box/internal';\nimport { InternalButton } from '../button/internal';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport styles from './styles.css.js';\nvar MAX_VALUE = 100;\n\nvar clamp = function clamp(value, lowerLimit, upperLimit) {\n  return Math.max(Math.min(value, upperLimit), lowerLimit);\n};\n\nexport var Progress = function Progress(_a) {\n  var value = _a.value,\n      isInFlash = _a.isInFlash,\n      labelId = _a.labelId;\n  var roundedValue = Math.round(value);\n  var progressValue = clamp(roundedValue, 0, MAX_VALUE);\n  return React.createElement(\"div\", {\n    className: styles['progress-container']\n  }, React.createElement(\"progress\", {\n    className: clsx(styles.progress, progressValue >= MAX_VALUE && styles.complete, isInFlash && styles['progress-in-flash']),\n    \"aria-valuenow\": progressValue,\n    \"aria-valuemin\": 0,\n    \"aria-valuemax\": MAX_VALUE,\n    max: MAX_VALUE,\n    value: progressValue,\n    \"aria-labelledby\": labelId\n  }), React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: styles['percentage-container']\n  }, React.createElement(InternalBox, {\n    className: styles.percentage,\n    variant: \"small\",\n    color: isInFlash ? 'inherit' : undefined\n  }, \"\".concat(progressValue, \"%\"))));\n};\nexport var SmallText = function SmallText(_a) {\n  var color = _a.color,\n      children = _a.children;\n  return React.createElement(InternalBox, {\n    className: styles['word-wrap'],\n    variant: \"small\",\n    display: \"block\",\n    color: color\n  }, children);\n};\n\nvar ResultButton = function ResultButton(_a) {\n  var onClick = _a.onClick,\n      children = _a.children;\n  return React.createElement(\"div\", {\n    className: styles['result-button']\n  }, React.createElement(InternalButton, {\n    formAction: \"none\",\n    onClick: onClick\n  }, children));\n};\n\nexport var ResultState = function ResultState(_a) {\n  var isInFlash = _a.isInFlash,\n      resultText = _a.resultText,\n      resultButtonText = _a.resultButtonText,\n      status = _a.status,\n      onClick = _a.onClick;\n  var hasResultButton = !!resultButtonText;\n\n  if (isInFlash) {\n    return React.createElement(\"div\", {\n      className: styles[\"result-container-\".concat(status)]\n    }, React.createElement(\"span\", {\n      className: styles['result-text']\n    }, resultText));\n  }\n\n  return React.createElement(\"div\", {\n    className: styles[\"result-container-\".concat(status)]\n  }, React.createElement(\"span\", {\n    className: clsx(hasResultButton && styles['with-result-button'])\n  }, React.createElement(InternalStatusIndicator, {\n    type: status === 'success' ? 'success' : 'error'\n  }, React.createElement(\"span\", {\n    className: styles['result-text']\n  }, resultText))), hasResultButton && React.createElement(ResultButton, {\n    onClick: onClick\n  }, resultButtonText));\n};","map":null,"metadata":{},"sourceType":"module"}