{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useEffect, useRef } from 'react';\nimport FocusLock from 'react-focus-lock';\nimport Header from '../header';\nimport { UtilityMenuItem } from '../menu-item';\nimport styles from '../../../styles.css.js';\nimport { useUniqueId } from '../../../../internal/hooks/use-unique-id';\n\nvar UtilitiesView = function UtilitiesView(_a) {\n  var headerText = _a.headerText,\n      dismissIconAriaLabel = _a.dismissIconAriaLabel,\n      onClose = _a.onClose,\n      _b = _a.items,\n      items = _b === void 0 ? [] : _b,\n      focusIndex = _a.focusIndex;\n  var headerId = useUniqueId('overflow-menu-header');\n  var ref = useRef(null);\n  useEffect(function () {\n    var _a; // A focus index is used to set the focus back to the submenu trigger\n    // returning from a submenu.\n\n\n    if (typeof focusIndex === 'number') {\n      (_a = ref.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [focusIndex]);\n  return React.createElement(FocusLock, {\n    returnFocus: true\n  }, React.createElement(Header, {\n    dismissIconAriaLabel: dismissIconAriaLabel,\n    onClose: onClose\n  }, React.createElement(\"span\", {\n    id: headerId\n  }, headerText)), React.createElement(\"ul\", {\n    className: styles['overflow-menu-list'],\n    \"aria-labelledby\": headerId\n  }, items.map(function (utility, index) {\n    return React.createElement(UtilityMenuItem, __assign({\n      key: index,\n      index: index,\n      ref: index === focusIndex ? ref : undefined\n    }, utility));\n  })));\n};\n\nexport default UtilitiesView;","map":null,"metadata":{},"sourceType":"module"}