{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback } from 'react';\nimport styles from './styles.css.js';\nimport InternalBox from '../../../box/internal';\nimport InternalStatusIndicator from '../../../status-indicator/internal';\nimport InternalSpaceBetween from '../../../space-between/internal';\nimport InternalExpandableSection from '../../../expandable-section/internal';\n\nfunction getStatusIndicatorType(taskIndex, currentTaskIndex) {\n  if (taskIndex < currentTaskIndex) {\n    return 'success';\n  }\n\n  if (taskIndex === currentTaskIndex) {\n    return 'in-progress';\n  }\n\n  return 'pending';\n}\n\nexport function Task(_a) {\n  var task = _a.task,\n      taskIndex = _a.taskIndex,\n      currentTaskIndex = _a.currentTaskIndex,\n      expanded = _a.expanded,\n      onToggleExpand = _a.onToggleExpand,\n      i18nStrings = _a.i18nStrings;\n  var statusIndicatorType = getStatusIndicatorType(taskIndex, currentTaskIndex);\n  var onExpandChange = useCallback(function () {\n    onToggleExpand(taskIndex);\n  }, [onToggleExpand, taskIndex]);\n  return React.createElement(\"li\", {\n    className: styles.task\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"xxs\"\n  }, React.createElement(\"div\", {\n    className: styles['task-title']\n  }, React.createElement(InternalStatusIndicator, {\n    __size: \"inherit\",\n    type: statusIndicatorType,\n    iconAriaLabel: i18nStrings.labelsTaskStatus[statusIndicatorType],\n    className: styles['task-title--status']\n  }), React.createElement(InternalBox, {\n    variant: \"h3\",\n    padding: {\n      left: 'xxxs',\n      vertical: 'n'\n    },\n    fontSize: \"heading-s\",\n    color: taskIndex < currentTaskIndex ? 'text-status-success' : 'text-status-inactive'\n  }, i18nStrings.taskTitle(taskIndex, task.title))), React.createElement(\"div\", {\n    className: styles['expandable-section-wrapper']\n  }, React.createElement(InternalExpandableSection, {\n    header: React.createElement(\"span\", {\n      className: styles['expandable-section-header']\n    }, i18nStrings.labelTotalSteps(task.steps.length)),\n    expanded: expanded,\n    onChange: onExpandChange\n  }, React.createElement(\"ol\", {\n    className: styles['step-list']\n  }, task.steps.map(function (step, stepIndex) {\n    return React.createElement(\"li\", {\n      key: stepIndex,\n      className: styles.step\n    }, React.createElement(InternalBox, {\n      color: \"text-body-secondary\",\n      fontSize: \"body-m\",\n      padding: {\n        left: 'l'\n      },\n      className: styles['step-title']\n    }, i18nStrings.stepTitle(stepIndex, step.title)));\n  }))))));\n}","map":null,"metadata":{},"sourceType":"module"}