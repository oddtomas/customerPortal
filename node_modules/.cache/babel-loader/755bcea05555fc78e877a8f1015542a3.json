{"ast":null,"code":"var filterUsingOperator = function filterUsingOperator(itemValue, tokenValue, operator) {\n  switch (operator) {\n    case '<':\n      return itemValue < tokenValue;\n\n    case '<=':\n      return itemValue <= tokenValue;\n\n    case '>':\n      return itemValue > tokenValue;\n\n    case '>=':\n      return itemValue >= tokenValue;\n\n    case '=':\n      // eslint-disable-next-line eqeqeq\n      return itemValue == tokenValue;\n\n    case '!=':\n      // eslint-disable-next-line eqeqeq\n      return itemValue != tokenValue;\n\n    case ':':\n      return (itemValue + '').toLowerCase().indexOf((tokenValue + '').toLowerCase()) > -1;\n\n    case '!:':\n      return (itemValue + '').toLowerCase().indexOf((tokenValue + '').toLowerCase()) === -1;\n  }\n};\n\nfunction freeTextFilter(value, item, operator, filteringPropertiesMap) {\n  var matches = Object.keys(filteringPropertiesMap).some(function (propertyKey) {\n    var operators = filteringPropertiesMap[propertyKey].operators;\n    return !!operators[operator] && filterUsingOperator(item[propertyKey], value, ':');\n  });\n  return operator === ':' ? matches : !matches;\n}\n\nfunction filterByToken(token, item, filteringPropertiesMap) {\n  if (token.propertyKey) {\n    // token refers to a unknown property or uses an unsupported operator\n    if (!(token.propertyKey in filteringPropertiesMap) || !(token.operator in filteringPropertiesMap[token.propertyKey].operators)) {\n      return false;\n    }\n\n    var itemValue = fixupFalsyValues(item[token.propertyKey]);\n    return filterUsingOperator(itemValue, token.value, token.operator);\n  }\n\n  return freeTextFilter(token.value, item, token.operator, filteringPropertiesMap);\n}\n\nfunction defaultFilteringFunction(filteringPropertiesMap) {\n  return function (item, _a) {\n    var tokens = _a.tokens,\n        operation = _a.operation;\n    var result = operation === 'and' ? true : !tokens.length;\n\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n      var token = tokens_1[_i];\n      result = operation === 'and' ? result && filterByToken(token, item, filteringPropertiesMap) : result || filterByToken(token, item, filteringPropertiesMap);\n    }\n\n    return result;\n  };\n}\n\nexport function propertyFilter(items, query, _a) {\n  var filteringFunction = _a.filteringFunction,\n      filteringProperties = _a.filteringProperties;\n  var filteringPropertiesMap = filteringProperties.reduce(function (acc, _a) {\n    var _b;\n\n    var key = _a.key,\n        operators = _a.operators,\n        defaultOperator = _a.defaultOperator;\n    var operatorSet = (_b = {}, _b[defaultOperator !== null && defaultOperator !== void 0 ? defaultOperator : '='] = true, _b);\n    operators === null || operators === void 0 ? void 0 : operators.forEach(function (op) {\n      return operatorSet[op] = true;\n    });\n    acc[key] = {\n      operators: operatorSet\n    };\n    return acc;\n  }, {});\n  var filter = filteringFunction || defaultFilteringFunction(filteringPropertiesMap);\n  return items.filter(function (item) {\n    return filter(item, query);\n  });\n}\nexport var fixupFalsyValues = function fixupFalsyValues(value) {\n  if (typeof value === 'boolean') {\n    return value + '';\n  }\n\n  if (value || value === 0) {\n    return value;\n  }\n\n  return '';\n};","map":null,"metadata":{},"sourceType":"module"}