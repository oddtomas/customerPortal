{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React, { useImperativeHandle, useRef } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport InternalInput from './internal';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nvar Input = React.forwardRef(function (_a, ref) {\n  var value = _a.value,\n      _b = _a.type,\n      type = _b === void 0 ? 'text' : _b,\n      step = _a.step,\n      inputMode = _a.inputMode,\n      _c = _a.autoComplete,\n      autoComplete = _c === void 0 ? true : _c,\n      disabled = _a.disabled,\n      readOnly = _a.readOnly,\n      disableBrowserAutocorrect = _a.disableBrowserAutocorrect,\n      onKeyDown = _a.onKeyDown,\n      onKeyUp = _a.onKeyUp,\n      onChange = _a.onChange,\n      onBlur = _a.onBlur,\n      onFocus = _a.onFocus,\n      ariaRequired = _a.ariaRequired,\n      name = _a.name,\n      placeholder = _a.placeholder,\n      autoFocus = _a.autoFocus,\n      ariaLabel = _a.ariaLabel,\n      rest = __rest(_a, [\"value\", \"type\", \"step\", \"inputMode\", \"autoComplete\", \"disabled\", \"readOnly\", \"disableBrowserAutocorrect\", \"onKeyDown\", \"onKeyUp\", \"onChange\", \"onBlur\", \"onFocus\", \"ariaRequired\", \"name\", \"placeholder\", \"autoFocus\", \"ariaLabel\"]);\n\n  var baseComponentProps = useBaseComponent('Input');\n  var baseProps = getBaseProps(rest);\n\n  var _d = useFormFieldContext(rest),\n      ariaLabelledby = _d.ariaLabelledby,\n      ariaDescribedby = _d.ariaDescribedby,\n      controlId = _d.controlId,\n      invalid = _d.invalid;\n\n  var inputRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        var _a;\n\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus.apply(_a, args);\n      },\n      select: function select() {\n        var _a;\n\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.select();\n      }\n    };\n  }, [inputRef]);\n  return React.createElement(InternalInput, __assign({\n    ref: inputRef\n  }, __assign(__assign(__assign({}, baseProps), baseComponentProps), {\n    autoComplete: autoComplete,\n    ariaLabel: ariaLabel,\n    ariaDescribedby: ariaDescribedby,\n    ariaLabelledby: ariaLabelledby,\n    ariaRequired: ariaRequired,\n    autoFocus: autoFocus,\n    controlId: controlId,\n    disabled: disabled,\n    disableBrowserAutocorrect: disableBrowserAutocorrect,\n    invalid: invalid,\n    name: name,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onChange: onChange,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    readOnly: readOnly,\n    type: type,\n    step: step,\n    inputMode: inputMode,\n    value: value\n  }), {\n    className: clsx(styles.root, baseProps.className)\n  }));\n});\napplyDisplayName(Input, 'Input');\nexport default Input;","map":null,"metadata":{},"sourceType":"module"}