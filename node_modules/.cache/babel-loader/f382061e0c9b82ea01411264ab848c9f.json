{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { containsOrEqual } from './utils/dom';\n\nvar FocusTracker =\n/** @class */\nfunction () {\n  function FocusTracker(node, _a, viewportId) {\n    var onFocusEnter = _a.onFocusEnter,\n        onFocusLeave = _a.onFocusLeave;\n\n    if (viewportId === void 0) {\n      viewportId = '';\n    }\n\n    var _this = this;\n\n    this.node = node;\n    this.currentlyFocused = false;\n\n    this.focusInListener = function (event) {\n      var focusIsInside = containsOrEqual(_this.node, event.target);\n\n      if (!_this.currentlyFocused && focusIsInside) {\n        _this.triggerFocus();\n      }\n    };\n\n    this.focusOutListener = function (event) {\n      var nextFocused = event.relatedTarget;\n      var isNextFocusedInParent = !containsOrEqual(_this.node, nextFocused);\n\n      if (_this.viewportId) {\n        var viewport = document.getElementById(_this.viewportId);\n        isNextFocusedInParent = isNextFocusedInParent && !containsOrEqual(viewport, nextFocused);\n      }\n\n      if (_this.currentlyFocused && (nextFocused === null || isNextFocusedInParent)) {\n        _this.triggerBlur();\n      }\n    };\n\n    this.onFocusEnter = onFocusEnter;\n    this.onFocusLeave = onFocusLeave;\n    this.viewportId = viewportId;\n  }\n\n  FocusTracker.prototype.initialize = function () {\n    this.currentlyFocused = containsOrEqual(this.node, document.activeElement);\n    document.addEventListener('focusin', this.focusInListener);\n    document.addEventListener('focusout', this.focusOutListener);\n  };\n\n  FocusTracker.prototype.destroy = function () {\n    document.removeEventListener('focusin', this.focusInListener);\n    document.removeEventListener('focusout', this.focusOutListener);\n  };\n\n  FocusTracker.prototype.triggerBlur = function () {\n    this.currentlyFocused = false;\n    this.onFocusLeave();\n  };\n\n  FocusTracker.prototype.triggerFocus = function () {\n    this.currentlyFocused = true;\n    this.onFocusEnter();\n  };\n\n  return FocusTracker;\n}();\n\nexport default FocusTracker;","map":null,"metadata":{},"sourceType":"module"}