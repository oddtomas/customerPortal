{"ast":null,"code":"import React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport ItemsList from '../items-list';\n\nvar CategoryElement = function CategoryElement(_a) {\n  var _b;\n\n  var item = _a.item,\n      onItemActivate = _a.onItemActivate,\n      onGroupToggle = _a.onGroupToggle,\n      targetItem = _a.targetItem,\n      isHighlighted = _a.isHighlighted,\n      isExpanded = _a.isExpanded,\n      highlightItem = _a.highlightItem,\n      disabled = _a.disabled,\n      variant = _a.variant; // Hide the category title element from screen readers because it will be\n  // provided as an ARIA label.\n\n  return React.createElement(\"li\", {\n    className: clsx(styles.category, styles[\"variant-\".concat(variant)], disabled && styles.disabled),\n    role: \"presentation\",\n    \"aria-disabled\": disabled ? 'true' : undefined\n  }, item.text && React.createElement(\"p\", {\n    className: clsx(styles.header, (_b = {}, _b[styles.disabled] = disabled, _b)),\n    \"aria-hidden\": \"true\"\n  }, item.text), React.createElement(\"ul\", {\n    className: clsx(styles['items-list-container']),\n    role: \"group\",\n    \"aria-label\": item.text\n  }, item.items && React.createElement(ItemsList, {\n    items: item.items,\n    onItemActivate: onItemActivate,\n    onGroupToggle: onGroupToggle,\n    targetItem: targetItem,\n    isHighlighted: isHighlighted,\n    isExpanded: isExpanded,\n    highlightItem: highlightItem,\n    categoryDisabled: disabled,\n    hasCategoryHeader: !!item.text,\n    variant: variant\n  })));\n};\n\nexport default CategoryElement;","map":null,"metadata":{},"sourceType":"module"}