{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport { useMergeRefs } from '../../hooks/use-merge-refs';\nimport React, { useEffect, useRef } from 'react';\nimport { getBaseProps } from '../../base-component';\nimport { fireNonCancelableEvent, fireKeyboardEvent, getBlurEventRelatedTarget } from '../../events';\nimport { findUpUntil } from '../../utils/dom';\nimport styles from './styles.css.js';\nvar BOTTOM_TRIGGER_OFFSET = 80;\n\nvar getItemIndex = function getItemIndex(containerRef, event) {\n  var target = findUpUntil(event.target, function (element) {\n    return element === containerRef.current || !!element.dataset.mouseTarget;\n  });\n  var mouseTarget = target === null || target === void 0 ? void 0 : target.dataset.mouseTarget;\n  return mouseTarget ? parseInt(mouseTarget) : -1;\n};\n\nvar OptionsList = function OptionsList(_a, ref) {\n  var _b;\n\n  var open = _a.open,\n      children = _a.children,\n      _c = _a.nativeAttributes,\n      nativeAttributes = _c === void 0 ? {} : _c,\n      _onKeyDown = _a.onKeyDown,\n      _onBlur = _a.onBlur,\n      _onFocus = _a.onFocus,\n      onLoadMore = _a.onLoadMore,\n      _onMouseUp = _a.onMouseUp,\n      _onMouseMove = _a.onMouseMove,\n      _d = _a.position,\n      position = _d === void 0 ? 'relative' : _d,\n      _e = _a.role,\n      role = _e === void 0 ? 'listbox' : _e,\n      _f = _a.decreaseTopMargin,\n      decreaseTopMargin = _f === void 0 ? false : _f,\n      ariaLabelledby = _a.ariaLabelledby,\n      restProps = __rest(_a, [\"open\", \"children\", \"nativeAttributes\", \"onKeyDown\", \"onBlur\", \"onFocus\", \"onLoadMore\", \"onMouseUp\", \"onMouseMove\", \"position\", \"role\", \"decreaseTopMargin\", \"ariaLabelledby\"]);\n\n  var baseProps = getBaseProps(restProps);\n  var menuRef = useRef(null);\n\n  var handleScroll = function handleScroll() {\n    var scrollContainer = menuRef === null || menuRef === void 0 ? void 0 : menuRef.current;\n\n    if (scrollContainer) {\n      var bottomEdgePosition = scrollContainer.scrollTop + scrollContainer.clientHeight;\n      var remainingScrollHeight = scrollContainer.scrollHeight - bottomEdgePosition;\n\n      if (remainingScrollHeight < BOTTOM_TRIGGER_OFFSET) {\n        fireNonCancelableEvent(onLoadMore);\n      }\n    }\n  };\n\n  useEffect(function () {\n    if (!open) {\n      return;\n    }\n\n    handleScroll();\n  });\n  var className = clsx(styles['options-list'], (_b = {}, _b[styles['decrease-top-margin']] = decreaseTopMargin, _b));\n  var mergedRef = useMergeRefs(ref, menuRef);\n  return React.createElement(\"ul\", __assign({}, baseProps, nativeAttributes, {\n    className: className,\n    ref: mergedRef,\n    style: {\n      position: position\n    },\n    role: role,\n    onScroll: handleScroll,\n    onKeyDown: function onKeyDown(event) {\n      return _onKeyDown && fireKeyboardEvent(_onKeyDown, event);\n    },\n    onMouseMove: function onMouseMove(event) {\n      return _onMouseMove === null || _onMouseMove === void 0 ? void 0 : _onMouseMove(getItemIndex(menuRef, event));\n    },\n    onMouseUp: function onMouseUp(event) {\n      return _onMouseUp === null || _onMouseUp === void 0 ? void 0 : _onMouseUp(getItemIndex(menuRef, event));\n    },\n    onBlur: function onBlur(event) {\n      return fireNonCancelableEvent(_onBlur, {\n        relatedTarget: getBlurEventRelatedTarget(event.nativeEvent)\n      });\n    },\n    onFocus: function onFocus() {\n      return fireNonCancelableEvent(_onFocus);\n    },\n    tabIndex: -1,\n    \"aria-labelledby\": ariaLabelledby\n  }), open && children);\n};\n\nexport default React.forwardRef(OptionsList);","map":null,"metadata":{},"sourceType":"module"}