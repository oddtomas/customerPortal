{"ast":null,"code":"var isGroup = function isGroup(option) {\n  return 'type' in option && option.type === 'parent';\n};\n\nvar popLastGroup = function popLastGroup(options) {\n  if (options.length) {\n    var lastOption = options[options.length - 1];\n\n    if (isGroup(lastOption)) {\n      options.pop();\n    }\n  }\n};\n\nexport var filterOptions = function filterOptions(options, text) {\n  var filteredOptions = options.reduce(function (filteredIn, option) {\n    if (isGroup(option)) {\n      popLastGroup(filteredIn);\n      filteredIn.push(option);\n    } else if (matchSingleOption(option, text)) {\n      filteredIn.push(option);\n    }\n\n    return filteredIn;\n  }, []);\n  popLastGroup(filteredOptions);\n  return filteredOptions;\n};\n\nvar matchSingleOption = function matchSingleOption(option, text) {\n  var searchableFields = ['value', 'label', 'description', 'labelTag'];\n  var searchableTagFields = ['tags', 'filteringTags'];\n  var searchText = text.toLowerCase();\n\n  var searchStrFieldsFn = function searchStrFieldsFn(attr) {\n    return matchString(option[attr], searchText);\n  };\n\n  var searchTagsFieldsFn = function searchTagsFieldsFn(attr) {\n    var _a;\n\n    return (_a = option[attr]) === null || _a === void 0 ? void 0 : _a.some(function (value) {\n      return matchString(value, searchText);\n    });\n  };\n\n  return searchableFields.some(searchStrFieldsFn) || searchableTagFields.some(searchTagsFieldsFn);\n};\n\nvar matchString = function matchString(value, searchText) {\n  return value && value.toLowerCase().indexOf(searchText) !== -1;\n};","map":null,"metadata":{},"sourceType":"module"}